{"version":3,"sources":["images/logo-ia.svg","images/avatar.jpg","components/lorems.js","components/Sidebar.js","components/Navbar.js","components/ResetScroll.js","components/FeatureCard.js","components/Tag.js","components/Avatar.js","components/Save.js","components/PostCard.js","components/CollectionCard.js","components/GetPosts.js","components/Searchbar.js","components/Debounce.js","pages/Home.js","pages/Article.js","pages/All.js","pages/NewPost.js","pages/MyArchive.js","pages/Collection.js","components/MyPostCard.js","pages/MyPosts.js","components/MobileNav.js","components/StickyBtn.js","components/DevNote.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","props","className","src","require","alt","activeTab","onClick","getTabName","window","scrollTo","to","width","height","viewBox","xmlns","d","fill","Navbar","useState","isScrolled","setIsScroll","isClicked","setIsClicked","changeBackground","scrollY","useEffect","addEventListener","removeEventListener","autoComplete","onSubmit","e","preventDefault","type","placeholder","name","id","style","visibility","ResetScroll","pathname","useLocation","FeatureCard","info","designer","topic","length","slice","description","cover","title","Tag","tag","Avatar","avatar","author","Save","saved","isSaved","setIsSaved","unmounted","query","fetch","method","credentials","headers","body","JSON","stringify","then","response","json","catch","error","console","log","stroke","strokeWidth","PostCard","forwardRef","ref","isLiked","setIsLiked","postImg","tags","map","key","Math","random","color","numLikes","numComments","CollectionCard","push","encodeURI","item","GetPosts","pageNumber","searchInput","loading","setLoading","setError","posts","setPosts","hasMore","setHasMore","page","search","data","matchPosts","sendPosts","prev","Searchbar","input","setInput","debouncedSearchTerm","value","delay","debounceVal","setDebounceVal","handler","setTimeout","clearTimeout","Debounce","getDebouncedInput","event","onChange","inputVal","target","toLowerCase","Home","setPage","archivedArticles","setArchivedArticles","debouncedInput","setDebouncedInput","lorems","renderSource","tab","itemObj","image","thumb","i","Object","keys","covers","observer","useRef","lastPost","useCallback","last","current","disconnect","IntersectionObserver","entries","isIntersecting","prevPage","observe","lists","fillRule","debouncedVal","index","small","likes","floor","includes","Article","match","setMatch","comments","setComments","a","matchedFromSev","postData","params","regular","history","goBack","clipRule","rows","comment","All","renderSources","lorem","LoremIpsum","sentencesPerParagraph","max","min","wordsPerSentence","generateParagraphs","NewPost","register","useForm","action","defaultValue","htmlFor","MyArchive","foundArticles","setFoundArticles","articles","article","Collection","matchedName","browserProps","backgroundImage","MyPostCard","now","Intl","DateTimeFormat","timeStyle","dateStyle","format","Date","content","join","delete","MyPosts","newPosts","setNewPosts","deletedPostId","setDeletedPostId","myPosts","deletePost","res","post","MobileNav","isHamburgerShown","setIsHamburgerShown","isAccountMenuShown","setIsAccountMenuShown","StickyBtn","expandSearchBar","setExpandSearchBar","DevNote","isSeen","setIsSeen","localStorage","getItem","setItem","App","setData","setTab","request","result","fetchData","tabName","exact","path","render","component","Boolean","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.57f54d10.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-ia.36e89574.svg\";","module.exports = __webpack_public_path__ + \"static/media/avatar.5b186035.jpg\";","let lorems=[\n    \"Sit sunt ullamco dolor sit. Magna cupidatat commodo voluptate in est laboris tempor ad consectetur. Duis magna ipsum pariatur excepteur.\",\n    \"Officia esse do aute sit. Sit exercitation irure excepteur laborum officia in cupidatat aute proident.\",\n    \"Sint incididunt dolore exercitation magna aute ad aliquip ex officia. Elit consectetur exercitation nisi pariatur minim reprehenderit duis est nostrud. Esse eu reprehenderit commodo.\",\n    \"Nulla reprehenderit elit id aute adipisicing ut proident eu. Ea exercitation magna culpa proident qui anim. Dolore irure qui eu laborum id do labore mollit esse.\",\n    \"Ut Lorem sunt quis exercitation ad occaecat. Proident aliqua nulla adipisicing.\",\n    \"Excepteur est voluptate culpa do laborum. Laboris aute do laboris eiusmod tempor.\",\n    \"Ipsum ex laborum deserunt ad consectetur ex aliqua. Eu excepteur excepteur ut aute. Commodo consectetur est mollit ullamco mollit sunt.\",\n    \"Voluptate duis quis proident. Officia consectetur excepteur deserunt adipisicing esse officia tempor minim incididunt.\",\n    \"Ad tempor voluptate consequat id do pariatur. Nulla elit reprehenderit eu anim enim sit ullamco ad enim. Dolor ad adipisicing nostrud reprehenderit proident. Est quis do ut ullamco irure officia fugiat quis anim.\",\n    \"Laborum aliqua pariatur id officia. Lorem duis non et nulla sit id eiusmod est. Adipisicing culpa minim et eiusmod cupidatat aliqua excepteur.\",\n    \"Aute sint magna dolore magna do. Laborum Lorem culpa Lorem. Officia qui magna irure cillum. Anim occaecat labore est.\",\n    \"Do anim commodo ut laboris labore. Dolor proident laboris sunt sit proident Lorem.\",\n    \"Nulla adipisicing eiusmod magna consequat sit tempor labore non minim. Ex nostrud ad sit. Aute in velit Lorem dolor Lorem velit aliquip minim.\",\n    \"Dolore proident nulla culpa. Qui pariatur id quis elit ullamco adipisicing. Labore dolor tempor ullamco tempor tempor. Lorem anim labore do est veniam eu officia non.\",\n    \"Excepteur reprehenderit occaecat ex ex nulla mollit ullamco laboris dolor. Amet ipsum sit eu Lorem. Voluptate nulla nulla officia eu excepteur excepteur. Reprehenderit nisi duis eiusmod dolor ex Lorem enim excepteur ullamco.\",\n    \"Culpa laboris minim excepteur ut non Lorem commodo veniam. Consequat voluptate enim culpa enim nulla. Dolore in consectetur Lorem excepteur aute esse. Exercitation cupidatat cupidatat veniam Lorem deserunt amet velit esse commodo.\",\n    \"Irure ullamco cillum dolore quis est ipsum exercitation est tempor. Dolor reprehenderit magna velit duis. Irure cupidatat fugiat ea et proident officia culpa proident. Cillum anim proident nostrud ipsum incididunt.\",\n    \"Ipsum non laboris id est cupidatat est deserunt. Dolore cillum eiusmod irure.\",\n    \"Amet sit eu duis. Et laboris aliquip do dolor labore laboris ullamco.\",\n    \"Irure cillum occaecat officia voluptate velit ad. Minim consectetur ex adipisicing cupidatat ea occaecat. Consectetur elit id aliquip.\"\n]\n\nmodule.exports = lorems","import React from 'react';\nimport './Sidebar.scss';\nimport { Link,withRouter } from 'react-router-dom';\n\nfunction Sidebar(props) {\n    \n\n\n\n    return (\n        \n        <div className=\"sidebar\">\n            <div><img src={require('../images/logo-ia.svg')} alt=\"logo\"></img></div>\n\n            <div className=\"menu-container\">\n            \n                <div className={props.activeTab === \"featured\" ? \"menu-icon active-tab\":\"menu-icon\"} onClick={\n                    ()=>{\n                        props.getTabName(\"featured\");\n                        window.scrollTo(0, 0);\n                        // changeActiveTab(0)\n                    }}>\n                    <Link to=\"/\">\n                    <div><svg width=\"59\" height=\"47\" viewBox=\"0 0 59 47\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M29.5397 0.00032196C29.8492 0.00693129 30.138 0.109031 30.4155 0.29866L58.4405 22.3298C59.0853 22.8454 59.1768 23.7969 58.694 24.4182C58.2182 25.0304 57.2062 25.1285 56.5968 24.6477L29.4936 3.35088L2.3905 24.6477C1.78112 25.1285 0.796877 25.0267 0.316285 24.4182C-0.160701 23.8141 -0.109415 22.8107 0.546754 22.3298L11.0561 14.0681V1.46906C11.0562 1.07954 11.2116 0.705961 11.4882 0.430527C11.7648 0.155093 12.14 0.000360907 12.5311 0.00032196H18.4311C18.8223 0.000360907 19.1975 0.155093 19.4741 0.430527C19.7507 0.705961 19.9061 1.07954 19.9061 1.46906V7.11453L28.5718 0.29866C28.9 0.0833205 29.2303 -0.00610378 29.5397 0.00032196ZM16.9561 2.9378H14.0061V11.7502L16.9561 9.43239V2.9378ZM47.9312 19.7595L50.8812 22.0773V45.5313C50.8811 45.9208 50.7257 46.2944 50.4491 46.5698C50.1725 46.8452 49.7973 47 49.4062 47H36.8686C36.4775 47 36.1023 46.8452 35.8257 46.5698C35.5491 46.2944 35.3937 45.9208 35.3936 45.5313V32.3126H23.5936V45.5313C23.5936 45.9208 23.4382 46.2944 23.1616 46.5698C22.885 46.8452 22.5098 47 22.1186 47H9.58113C9.18995 47 8.8148 46.8452 8.53819 46.5698C8.26159 46.2944 8.10617 45.9208 8.10613 45.5313V22.0773L11.0561 19.7595V44.0625H20.6436V30.8439C20.6437 30.4544 20.7991 30.0809 21.0757 29.8054C21.3523 29.53 21.7275 29.3752 22.1186 29.3752H36.8686C37.2598 29.3752 37.635 29.53 37.9116 29.8054C38.1882 30.0809 38.3436 30.4544 38.3436 30.8439V44.0625H47.9312V19.7595Z\" fill=\"#BDBDBD\" />\n                    </svg>\n                    </div>\n\n                        <p className=\"small-text\">Home</p>\n                    </Link>\n               \n                </div>\n            \n                <div className={props.activeTab === \"designers\" ? \"menu-icon active-tab\":\"menu-icon\"} onClick={\n                    ()=>{\n                        props.getTabName('designers');\n                        window.scrollTo(0, 0);\n                        //changeActiveTab(1)\n                    }}>\n                    <Link to =\"/\">\n                    <div>\n                        <svg width=\"50\" height=\"58\" viewBox=\"0 0 50 58\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M11.6871 20.3208C12.2024 20.3208 12.6201 19.9035 12.6201 19.3889C12.6201 18.8742 12.2024 18.4569 11.6871 18.4569C11.1718 18.4569 10.7541 18.8742 10.7541 19.3889C10.7541 19.9035 11.1718 20.3208 11.6871 20.3208Z\" fill=\"#FF0266\" />\n                            <path d=\"M49.2871 23.8938L41.4817 21.2211V18.6629C41.4817 9.64102 34.1337 2.30167 25.1011 2.30167H22.3619C21.5626 2.30167 20.7773 2.36211 20.0082 2.47315C18.7558 0.930508 15.8505 1.68953 13.7107 2.52094C11.2769 3.46621 8.7086 0 8.7086 0C7.23097 3.87384 9.62122 5.79389 11.2853 6.62249C8.02749 9.61501 5.98132 13.9042 5.98132 18.6629V20.5717L0.224193 27.9194C-0.0248927 28.2371 -0.0699258 28.6679 0.106686 29.0313C0.284002 29.3939 0.652002 29.6237 1.05589 29.6237H6.08405C6.10938 30.2647 6.11923 30.9049 6.12838 31.5311C6.21844 37.3447 6.31203 43.3522 18.8768 43.6671V49.5186L17.2915 50.0626C16.9791 50.1694 16.7349 50.4168 16.6315 50.7309L14.6965 56.6169C14.5143 57.17 14.8161 57.7653 15.3699 57.9473C15.479 57.9831 15.5894 58 15.6992 58C16.1432 58 16.5562 57.7182 16.7019 57.274L18.4736 51.8856L41.1538 44.1035L42.3099 57.0386C42.3613 57.6184 42.8728 58.0429 43.4554 57.9951C44.0352 57.9431 44.4644 57.4314 44.4124 56.8516L43.1374 42.5763C43.1085 42.2538 42.9326 41.9621 42.6603 41.7857C42.3873 41.6093 42.0489 41.5671 41.7428 41.6733L41.481 41.7632V26.6628L47.6301 28.7614C47.7412 28.7994 47.8566 28.8183 47.9713 28.8183C48.1318 28.8183 48.2915 28.7818 48.4378 28.7101C48.689 28.5864 48.8811 28.3671 48.9712 28.1022L49.9436 25.2298C50.1308 24.6795 49.8367 24.0829 49.2871 23.8938ZM39.3708 42.4864L20.9884 48.794V42.6255C20.9884 42.0429 20.5156 41.5713 19.933 41.5713C10.3558 41.5713 8.68468 38.6582 8.34131 34.3241H11.6104C12.193 34.3241 12.6658 33.8525 12.6658 33.2699C12.6658 32.6872 12.193 32.2157 11.6104 32.2157H8.25195C8.24772 31.9795 8.2435 31.7413 8.23998 31.4988C8.22521 30.524 8.20902 29.5169 8.13796 28.4971C8.09996 27.9447 7.63978 27.516 7.08532 27.516H3.22237L7.86847 21.5865C8.01341 21.401 8.09222 21.1726 8.09222 20.9371V18.665C8.09222 10.8056 14.4939 4.41218 22.3619 4.41218H25.1011C32.9699 4.41218 39.3708 10.8063 39.3708 18.665V20.5L34.6171 18.8716C34.4503 18.7121 34.2779 18.556 34.0795 18.4239C33.2809 17.8947 32.3429 17.7007 31.3754 17.8476L20.7492 14.2591C20.6514 14.2261 20.55 14.2078 20.4466 14.2043L15.1806 14.0258C14.7282 14.0159 14.294 14.3013 14.1449 14.7419C13.9957 15.1826 14.1533 15.6689 14.5333 15.9388L18.8276 18.9897C18.9113 19.0494 19.0035 19.0965 19.1013 19.1295L26.9243 21.7706C26.8384 21.9808 26.7561 22.1937 26.6878 22.4151C26.5147 22.971 26.8258 23.5621 27.3823 23.735C27.9403 23.9072 28.5307 23.5965 28.7038 23.0413C29.1632 21.564 30.1082 20.4445 31.2326 20.046C31.6703 19.89 32.3183 19.7866 32.9122 20.1802C33.7889 20.7628 34.2758 22.3146 34.247 24.4385C34.2245 26.1821 33.5405 28.377 32.4365 29.0313C32.2564 29.1381 31.7069 29.4635 30.6331 28.8963C30.1181 28.6244 29.4799 28.8211 29.2068 29.3356C28.9345 29.85 29.1316 30.4882 29.6466 30.7602C30.4375 31.1776 31.1397 31.3315 31.7456 31.3315C32.4823 31.3315 33.0768 31.1031 33.5145 30.8445C35.3038 29.784 36.2087 27.1154 36.3417 24.9101L39.3722 25.9439V42.4864H39.3708ZM28.0128 19.9117L19.9238 17.1807L18.6158 16.2509L20.22 16.3057L28.7002 19.1689C28.454 19.3917 28.2281 19.6447 28.0128 19.9117ZM47.3113 26.4246L36.2565 22.652C36.2122 22.297 36.1447 21.9442 36.0602 21.5935L47.6083 25.5482L47.3113 26.4246Z\" fill=\"#FF0266\" />\n                        </svg>\n                    </div>\n                    <p className=\"small-text\">Designer</p>\n                    </Link>\n                </div>\n           \n            \n            \n                <div className={props.activeTab === \"topics\" ? \"menu-icon active-tab\":\"menu-icon\"} onClick={\n                    ()=>{\n                        props.getTabName('topics');\n                        window.scrollTo(0, 0);\n                        //changeActiveTab(2)\n                    }}\n                    >\n                    <Link to =\"/\">\n                    <div>\n                        <svg width=\"56\" height=\"60\" viewBox=\"0 0 56 60\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M42.6976 28.3279C42.6976 20.1312 36.0788 13.4426 27.9675 13.4426C19.8563 13.4426 13.2375 20.1312 13.2375 28.3279C13.2375 29.5082 13.3673 30.6885 13.6918 31.8689C14.0811 33.7705 14.7949 34.9508 15.7682 36.5902C15.9629 36.9836 16.2225 37.3771 16.482 37.8361C16.8065 38.3607 17.066 38.8853 17.3905 39.3443C18.6883 41.5082 19.467 42.7541 19.467 45.3115V51.4754C19.467 53.0492 20.5701 54.2951 22.0626 54.5574C22.7115 57.9017 24.6582 60 27.9675 60C31.2769 60 33.2885 57.9017 33.8725 54.5574C35.365 54.2951 36.4681 52.9836 36.4681 51.4754V45.3115C36.4681 42.7541 37.2468 41.4426 38.5446 39.3443C38.8042 38.8853 39.1286 38.3607 39.4531 37.8361C39.7126 37.3771 39.9722 36.9836 40.1668 36.5902C41.1402 34.9508 41.854 33.7705 42.2433 31.8689C42.5678 30.6885 42.6976 29.5082 42.6976 28.3279ZM33.9374 46.8852H22.1274V45.3771C22.1274 45.0492 22.1275 44.7869 22.0626 44.5246H33.9374C33.9374 44.7869 33.8725 45.0492 33.8725 45.3771V46.8852H33.9374ZM33.3534 52.0656H22.5817C22.2572 52.0656 22.0626 51.8033 22.0626 51.541V49.5082H33.8725V51.541C33.9374 51.8033 33.6778 52.0656 33.3534 52.0656ZM27.9675 57.4427C27.2538 57.4427 25.4368 57.4426 24.723 54.6885H31.2769C30.5631 57.4426 28.6813 57.4427 27.9675 57.4427ZM39.7126 31.3443C39.3882 32.7869 38.8691 33.7705 37.9606 35.2787C37.701 35.6721 37.5064 36.0656 37.2468 36.5246C36.9223 37.0492 36.6628 37.5738 36.4032 37.9672C35.6246 39.2787 34.9108 40.459 34.4565 41.8361H21.6083C21.1541 40.459 20.5052 39.2787 19.6616 37.9672C19.4021 37.5082 19.0776 37.0492 18.8181 36.5246C18.5585 36.0656 18.2989 35.6066 18.1043 35.2787C17.1958 33.7049 16.6767 32.7869 16.3522 31.2787C16.0927 30.2951 15.9629 29.3115 15.9629 28.3279C15.9629 21.5738 21.4137 16.0656 28.0973 16.0656C34.781 16.0656 40.2318 21.5738 40.2318 28.3279C40.102 29.3115 39.9722 30.2951 39.7126 31.3443Z\" fill=\"#BDBDBD\" />\n                            <path d=\"M54.7022 27.0164H49.3163C48.6026 27.0164 48.0185 27.6066 48.0185 28.3279C48.0185 29.0492 48.6026 29.6394 49.3163 29.6394H54.7022C55.416 29.6394 56 29.0492 56 28.3279C56 27.6066 55.416 27.0164 54.7022 27.0164Z\" fill=\"#BDBDBD\" />\n                            <path d=\"M43.022 14.4263C43.3465 14.4263 43.6709 14.2951 43.9305 14.0328L47.759 10.164C48.2781 9.63937 48.2781 8.85249 47.759 8.3279C47.2399 7.80331 46.4612 7.80331 45.9421 8.3279L42.1136 12.1967C41.5944 12.7213 41.5944 13.5082 42.1136 14.0328C42.3731 14.2951 42.6976 14.4263 43.022 14.4263Z\" fill=\"#BDBDBD\" />\n                            <path d=\"M27.9675 8.06557C28.6813 8.06557 29.2653 7.47541 29.2653 6.75409V1.31148C29.2653 0.590164 28.6813 0 27.9675 0C27.2538 0 26.6697 0.590164 26.6697 1.31148V6.75409C26.6697 7.47541 27.2538 8.06557 27.9675 8.06557Z\" fill=\"#BDBDBD\" />\n                            <path d=\"M12.0047 14.0328C12.2642 14.2951 12.5886 14.4263 12.9131 14.4263C13.2375 14.4263 13.562 14.2951 13.8216 14.0328C14.3407 13.5082 14.3407 12.7213 13.8216 12.1967L9.99304 8.3279C9.47392 7.80331 8.69525 7.80331 8.17613 8.3279C7.65701 8.85249 7.65701 9.63937 8.17613 10.164L12.0047 14.0328Z\" fill=\"#BDBDBD\" />\n                            <path d=\"M6.68365 27.0164H1.2978C0.584009 27.0164 0 27.6066 0 28.3279C0 29.0492 0.584009 29.6394 1.2978 29.6394H6.68365C7.39744 29.6394 7.98145 29.0492 7.98145 28.3279C7.98145 27.6066 7.39744 27.0164 6.68365 27.0164Z\" fill=\"#BDBDBD\" />\n                            <path d=\"M12.0047 42.623L8.17613 46.4918C7.65701 47.0164 7.65701 47.8033 8.17613 48.3279C8.43569 48.5902 8.76016 48.7213 9.08461 48.7213C9.40906 48.7213 9.73348 48.5902 9.99304 48.3279L13.8216 44.4591C14.3407 43.9345 14.3407 43.1476 13.8216 42.623C13.3024 42.0984 12.4589 42.0984 12.0047 42.623Z\" fill=\"#BDBDBD\" />\n                            <path d=\"M43.9305 42.623C43.4113 42.0984 42.6327 42.0984 42.1136 42.623C41.5944 43.1476 41.5944 43.9345 42.1136 44.4591L45.9421 48.3279C46.2016 48.5902 46.5261 48.7213 46.8505 48.7213C47.175 48.7213 47.4994 48.5902 47.759 48.3279C48.2781 47.8033 48.2781 47.0164 47.759 46.4918L43.9305 42.623Z\" fill=\"#BDBDBD\" />\n                        </svg>\n                    </div>\n                    <p className=\"small-text\">Topic</p>\n                    </Link>\n                </div>\n        \n            \n                <div className={props.activeTab === \"archives\" ? \"menu-icon active-tab\":\"menu-icon\"} onClick={()=>{props.getTabName(\"archives\")}}>\n                    <Link to=\"/archive\">\n                    <div>\n                        <svg width=\"56\" height=\"54\" viewBox=\"0 0 56 54\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M43.7891 53.4996C43.399 53.4996 43.007 53.4069 42.6486 53.2177L27.9997 45.5165L13.3508 53.2177C12.9924 53.4069 12.6004 53.4996 12.2103 53.4996C11.7019 53.4996 11.1967 53.3415 10.7692 53.0317C10.0145 52.4829 9.63615 51.5533 9.7942 50.6343L12.5917 34.3222L0.740297 22.7695C0.072034 22.118 -0.168142 21.1442 0.119945 20.2563C0.408654 19.369 1.17585 18.7226 2.09922 18.5882L18.4773 16.2082L25.8014 1.36639C26.2145 0.529508 27.0664 0 27.9997 0C28.933 0 29.7848 0.529508 30.198 1.36639L37.5227 16.2082L53.9008 18.5882C54.8242 18.7219 55.5913 19.3684 55.8801 20.2563C56.1681 21.1436 55.928 22.118 55.2597 22.7695L43.4083 34.3216L46.2058 50.6336C46.3638 51.5527 45.9855 52.4823 45.2308 53.0311C44.8033 53.3415 44.2975 53.4996 43.7891 53.4996ZM43.6329 50.8334L40.8759 34.7559C40.7328 33.9227 41.0097 33.0722 41.6151 32.4823L53.2947 21.0969L37.1531 18.7506C36.3163 18.6292 35.5932 18.1041 35.2187 17.3456L27.9997 2.71661L20.7807 17.345C20.4061 18.1034 19.6831 18.6292 18.8462 18.7499L2.70464 21.0969L14.3843 32.4823C14.9897 33.0728 15.266 33.9233 15.1235 34.7559L12.3664 50.8334L26.8044 43.2429C27.1784 43.0457 27.589 42.9474 27.9997 42.9474C28.4104 42.9474 28.821 43.0457 29.195 43.2429L43.6329 50.8334Z\" fill=\"#BDBDBD\" />\n                        </svg>\n                    </div>\n                    <p className=\"small-text\">My Archive</p>\n                    </Link>\n                </div>\n                \n            </div>\n\n\n        </div>\n    );\n}\n\nexport default withRouter(Sidebar);\n","import React,{useState, useEffect} from 'react';\nimport './Navbar.scss';\nimport { Link } from 'react-router-dom';\n\nfunction Navbar() {\n\n    const [isScrolled, setIsScroll] = useState(false);\n    const [isClicked,setIsClicked] = useState(false);\n    \n    function changeBackground(){\n        if(window.scrollY>200){\n            setIsScroll(true);\n        }else{\n            setIsScroll(false);\n        }\n       \n    }\n\n    function toggleMenu(){\n        isClicked ? setIsClicked(false):setIsClicked(true)\n\n    }\n\n    const menuVis={visibility:\"hidden\"};\n\n    useEffect(()=>{\n        window.addEventListener(\"scroll\",changeBackground);\n        return ()=> window.removeEventListener(\"scroll\",changeBackground)\n    })\n\n\n    return (\n        <div className={isScrolled ? \"navbar-customized nav-scrolled\":\"navbar-customized\"}>\n        <div className=\"inner-container\">\n        <form autoComplete=\"off\" onSubmit={(e)=>{e.preventDefault()}}>\n            <svg width=\"20\" height=\"20\" viewBox=\"0 0 27 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M21.1301 19.0993C22.9842 16.7279 23.8636 13.7385 23.5889 10.7409C23.3143 7.74333 21.9063 4.96348 19.6522 2.96852C17.3981 0.973555 14.4678 -0.086192 11.4591 0.00548867C8.45044 0.0971693 5.59009 1.33337 3.46166 3.46188C1.33323 5.59038 0.0971032 8.4508 0.00548168 11.4595C-0.0861398 14.4683 0.973646 17.3986 2.96862 19.6527C4.9636 21.9068 7.74343 23.3147 10.741 23.5893C13.7385 23.8639 16.7279 22.9844 19.0991 21.1303L24.5441 26.5751C24.6773 26.7094 24.8357 26.8161 25.0101 26.889C25.1846 26.9619 25.3718 26.9996 25.5609 27C25.75 27.0004 25.9373 26.9634 26.1121 26.8912C26.2869 26.819 26.4457 26.7131 26.5794 26.5793C26.7131 26.4456 26.8191 26.2868 26.8913 26.112C26.9634 25.9372 27.0004 25.7499 27 25.5608C26.9996 25.3717 26.9619 25.1845 26.8889 25.0101C26.816 24.8356 26.7094 24.6772 26.5751 24.5441L21.1301 19.0993ZM11.8391 20.7662C10.0735 20.7662 8.34756 20.2427 6.87949 19.2618C5.41142 18.2809 4.26719 16.8867 3.5915 15.2554C2.9158 13.6242 2.739 11.8292 3.08343 10.0975C3.42786 8.36581 4.27807 6.77512 5.52653 5.52661C6.77499 4.27811 8.36564 3.42786 10.0973 3.08339C11.829 2.73892 13.6239 2.9157 15.2552 3.59137C16.8864 4.26704 18.2806 5.41126 19.2615 6.87934C20.2424 8.34741 20.766 10.0734 20.766 11.839C20.7634 14.2058 19.822 16.4749 18.1485 18.1485C16.4749 19.8221 14.2059 20.7635 11.8391 20.7662V20.7662Z\" fill=\"#BDBDBD\" />\n            </svg>\n\n            <input type=\"text\" placeholder=\"this is a mock search bar\" name=\"search\" id=\"search\" />\n        </form>\n            \n            <div className=\"menu-container\">\n                <div onClick={toggleMenu} className=\"nav-avatar\"></div>\n                <div style={!isClicked? menuVis:null}>\n                    <Link to=\"/my-posts\">My Posts</Link>\n                    <Link to=\"/archive\">My Archives</Link>\n                    <Link to=\"#\">Setting</Link>\n                    <button type=\"button\">Log Out</button>\n                </div>\n            </div>\n\n            <Link to=\"/new-post\"><svg width=\"40\" height=\"28\" viewBox=\"0 0 40 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M33.8625 0.462524C33.651 0.46422 33.4488 0.5496 33.3 0.7L13.5 20.5C13.39 20.6135 13.3161 20.7571 13.2876 20.9125L12.15 26.5626C12.1228 26.6919 12.128 26.826 12.1652 26.9529C12.2025 27.0798 12.2706 27.1954 12.3635 27.2895C12.4563 27.3836 12.5711 27.4533 12.6974 27.4922C12.8238 27.5311 12.9578 27.5381 13.0876 27.5126L18.75 26.375C18.9055 26.3465 19.049 26.2726 19.1625 26.1626L38.9625 6.36252C39.0377 6.28812 39.0974 6.19956 39.1382 6.10193C39.1789 6.0043 39.1999 5.89956 39.1999 5.79377C39.1999 5.68799 39.1789 5.58325 39.1382 5.48562C39.0974 5.38799 39.0377 5.2994 38.9625 5.225L34.4376 0.7C34.3241 0.589963 34.1805 0.516032 34.025 0.4875C33.9719 0.473675 33.9174 0.465359 33.8625 0.462695V0.462524ZM33.8749 2.4L37.2624 5.7875L18.1999 24.8375L13.9624 25.7L14.7999 21.475L33.8749 2.4V2.4ZM2.00005 25.1375C1.33733 25.1375 0.800049 25.6748 0.800049 26.3375C0.800049 27.0002 1.33733 27.5375 2.00005 27.5375H9.20005C9.86277 27.5375 10.4 27.0002 10.4 26.3375C10.4 25.6748 9.86277 25.1375 9.20005 25.1375H2.00005V25.1375Z\" fill=\"#FFFFF8\" />\n            </svg>\n            </Link>\n        </div>\n\n\n        </div>\n    )\n}\n\nexport default Navbar\n\n\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport default function ResetScroll() {\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n\n  return null;\n}\n\n/* MIT License\n\nCopyright (c) React Training 2016-2018\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE. */","import React from 'react'\nimport './FeatureCard.scss'\nimport { Link } from 'react-router-dom';\n\n\nfunction FeatureCard(props) {\n    const maxInfo = 30;\n    const maxDescription = 60;\n    let info = null;\n    if(props.designer && props.topic){\n        info = `${props.designer} / ${props.topic}`\n        if(info.length>maxInfo){\n            info = info.slice(0,maxInfo) + \"...\"\n        }\n    }\n    \n    \n\n    let description = props.description;\n    if(description.length>maxDescription){\n        description = description.slice(0,maxDescription) + \"...\"\n    }\n\n\n    return (\n        <Link to={\"/article/\"+props.id}>\n            <div className=\"card-customized\">\n                \n                    <div className=\"left\">\n                        <img src={props.cover} className=\"card-img\" alt=\"cover\"></img>\n                    </div>\n\n                    <div className=\"right\">\n                        <div className=\"\">\n                            <h3 className=\"card-title\">{props.title}</h3>\n                            <p>{info}</p>\n                            <p className=\"card-text small-text\">{description}</p>\n                            \n                        </div>\n                    </div>\n                    \n            </div>\n        </Link>\n\n    )\n}\n\nexport default FeatureCard\n","import React from 'react'\nimport './Tag.scss'\n\nfunction Tag(props) {\n    return (\n       <div className=\"tag\">\n            <span className=\"small-text\">{props.tag}</span>\n       </div>\n    )\n}\n\nexport default Tag\n","import React from 'react'\nimport './Avatar.scss'\n \nfunction Avatar(props) {\n    return (\n        <div className=\"author-info\">\n                <img src={props.avatar} alt=\"author avatar\"></img>\n                <span className=\"small-text\">{props.author}</span>\n        </div>\n    )\n}\n\nexport default Avatar\n","import React,{useState,useEffect} from 'react'\n\nconst Save = (props)=> {\n    const [isSaved, setIsSaved] = useState(props.saved)\n    const [isClicked,setIsClicked] = useState(false)\n \n    function handleClicked(){\n        isSaved ? setIsSaved(false):setIsSaved(true)\n        setIsClicked(true)\n    }\n\n    useEffect(() => {\n        setIsSaved(props.saved);\n      }, [props]);\n   \n    useEffect(() => {\n        // fetch could only work using useEffect()\n        let unmounted = false\n        let query = { isSaved: isSaved, id: props.id}\n        if(isClicked && !unmounted){fetch('/api/save-post', {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(query), // body data type must match \"Content-Type\" header        \n        }).then(response => response.json())\n        .catch(error => {\n                console.log(error);\n\n            })}\n        return ()=> { unmounted=true }\n\n    }, [isClicked,isSaved,props.id])\n\n\n\n    return (\n        <div onClick={handleClicked}>\n            {/* save icon */}\n            <svg width=\"18\" height=\"24\" viewBox=\"0 0 15 20\" fill={isSaved ? \"#FF0266\":\"none\"} xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M7.89162 14.0542L7.5 13.8145L7.10838 14.0542L0.75 17.9471V0.75H14.25V17.9471L7.89162 14.0542Z\" stroke=\"#FF0266\" strokeWidth=\"1.5\" />\n            </svg>\n\n        </div>\n    )\n}\n\n\nexport default Save","import React, { forwardRef, useState } from 'react'\nimport './PostCard.scss'\nimport Tag from './Tag'\nimport Avatar from './Avatar'\nimport {Link} from 'react-router-dom'\nimport Save from './Save'\nimport {HashLink} from 'react-router-hash-link'\n\nconst PostCard = forwardRef((props,ref) => {\n    const [isLiked, setIsLiked] = useState(false)\n\n    function toggleIsLike(){\n        isLiked? setIsLiked(false):setIsLiked(true)\n    }\n\n    return (\n        <div ref={ref} className={props.type !==\"archive\" ? \"card post-card\" : \"card post-card archive-post-card\"}>\n            <Avatar author={props.author} avatar={props.avatar}/>\n            <Link to={\"/article/\" + props.id}>\n                <img src={props.postImg} alt=\"background\"></img>\n            </Link>\n            \n            <div className=\"post-info-short\">\n                <div className=\"info-text\">\n                <h3>{props.title}</h3>\n                <p>{`${props.designer} / ${props.topic}`}</p>\n                <div id=\"tags\">\n                    {props.tags ?\n                    props.tags.map(tag=>(<Tag key={Math.random()} tag={tag}/>))\n                    :<Tag tag={\"placeholder\"} />}\n                </div>\n                </div>              \n              <Save id={props.id} saved={props.saved} />\n               \n            </div>\n\n            <div className= \"post-description\">\n            <p className=\"small-text\">{props.description.slice(0,200)}</p>\n\n            </div>\n\n            <div className=\"react-post\">\n                <div id=\"like\" onClick={toggleIsLike}>\n                <svg width=\"19\" height=\"18\" viewBox=\"0 0 19 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M5.55097 1.5126C6.6348 1.5126 7.66004 1.93613 8.42165 2.72269C8.45095 2.75294 8.48024 2.78319 8.50953 2.81345L9.56407 3.93277L10.6186 2.8437C11.3802 2.05714 12.4055 1.60336 13.4893 1.60336C14.5731 1.60336 15.5984 2.05714 16.3893 2.8437C17.9711 4.47731 17.9711 7.16975 16.3893 8.80336L9.56407 15.8521L3.76411 9.86218L3.79341 9.83193L2.70957 8.77311C2.68028 8.74286 2.65099 8.7126 2.6217 8.68235C1.86009 7.8958 1.44999 6.83697 1.44999 5.71765C1.44999 4.59832 1.88938 3.5395 2.65099 2.72269C3.4126 1.93613 4.43784 1.5126 5.55097 1.5126ZM5.55097 0C4.11562 0 2.70958 0.57479 1.62575 1.69412C-0.541915 3.93277 -0.541915 7.56303 1.62575 9.80168C1.65504 9.83193 1.68433 9.86218 1.71362 9.89244L9.56407 18L17.3852 9.89244C19.5529 7.65378 19.5236 4.02353 17.3852 1.78487C16.3014 0.665547 14.8953 0.0907566 13.46 0.0907566C12.0539 0.0907566 10.6186 0.635294 9.53478 1.75462C9.50548 1.72437 9.47619 1.69412 9.4469 1.66387C8.39236 0.544538 6.95702 0 5.55097 0Z\" fill={isLiked ? \"#FF0266\":\"#BDBDBD\"} />\n</svg>\n\n                <span className=\"small-text\" style={isLiked ? {color:\"#FF0266\"}:null}>{isLiked ? props.numLikes + 1 : props.numLikes}</span>\n                </div>\n                <div id=\"comment\">\n                <HashLink to={\"/article/\"+props.id + \"#comment\"}>\n                <svg width=\"19\" height=\"19\" viewBox=\"0 0 19 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M9.88297 1.1875C10.8508 1.1875 11.8305 1.38344 12.7894 1.76937C13.7245 2.14344 14.6122 2.69859 15.3603 3.36953C16.1262 4.05828 16.7319 4.84203 17.1534 5.70594C17.5928 6.59953 17.8155 7.53172 17.8155 8.48172C17.8155 9.48515 17.6255 10.4559 17.2455 11.3673C16.8714 12.2698 16.3341 13.0744 15.6453 13.7631C14.9387 14.4697 14.1016 15.0219 13.1545 15.4078C12.1481 15.8175 11.0467 16.0253 9.88 16.0253C9.32187 16.0253 8.13734 15.9066 7.57922 15.7937L7.13687 15.7047L6.74797 15.9303L4.22453 17.3998V14.6181L3.78516 14.2619C2.92422 13.5642 2.27109 12.7241 1.83766 11.7681C1.41016 10.8062 1.1875 9.6989 1.1875 8.47875C1.1875 7.51984 1.40719 6.58469 1.84359 5.70594C2.27109 4.84203 2.88562 4.06125 3.67234 3.38734C4.47094 2.70156 5.40609 2.16422 6.44515 1.78422C7.53469 1.38641 8.68953 1.1875 9.88297 1.1875ZM9.88297 0C4.43531 0 0 3.79703 0 8.47875C0 11.2634 1.01234 13.5405 3.04 15.1852V17.9698C3.04 18.7298 3.29234 18.9822 3.67234 18.9822C4.05234 18.9822 4.30469 18.7298 4.30469 18.7298L7.34469 16.9575C7.97703 17.0852 9.24468 17.2098 9.87703 17.2098C15.3247 17.2098 19 13.1605 19 8.47875C19.0059 3.79703 14.443 0 9.88297 0Z\" fill=\"#BDBDBD\"/>\n<path d=\"M8.17297 8.89734C8.17297 9.25165 8.31372 9.59146 8.56425 9.84199C8.81479 10.0925 9.15459 10.2333 9.5089 10.2333C9.86322 10.2333 10.203 10.0925 10.4536 9.84199C10.7041 9.59146 10.8448 9.25165 10.8448 8.89734C10.8448 8.54303 10.7041 8.20323 10.4536 7.95269C10.203 7.70216 9.86322 7.5614 9.5089 7.5614C9.15459 7.5614 8.81479 7.70216 8.56425 7.95269C8.31372 8.20323 8.17297 8.54303 8.17297 8.89734Z\" fill=\"#BDBDBD\"/>\n<path d=\"M4.36703 8.89734C4.36703 9.07278 4.40158 9.2465 4.46872 9.40858C4.53586 9.57067 4.63426 9.71794 4.75832 9.84199C4.88237 9.96605 5.02964 10.0644 5.19173 10.1316C5.35381 10.1987 5.52753 10.2333 5.70297 10.2333C5.8784 10.2333 6.05212 10.1987 6.21421 10.1316C6.37629 10.0644 6.52356 9.96605 6.64762 9.84199C6.77167 9.71794 6.87007 9.57067 6.93721 9.40858C7.00435 9.2465 7.0389 9.07278 7.0389 8.89734C7.0389 8.7219 7.00435 8.54818 6.93721 8.3861C6.87007 8.22402 6.77167 8.07675 6.64762 7.95269C6.52356 7.82864 6.37629 7.73023 6.21421 7.6631C6.05212 7.59596 5.8784 7.5614 5.70297 7.5614C5.52753 7.5614 5.35381 7.59596 5.19173 7.6631C5.02964 7.73023 4.88237 7.82864 4.75832 7.95269C4.63426 8.07675 4.53586 8.22402 4.46872 8.3861C4.40158 8.54818 4.36703 8.7219 4.36703 8.89734Z\" fill=\"#BDBDBD\"/>\n<path d=\"M11.967 8.89734C11.967 9.25165 12.1078 9.59146 12.3583 9.84199C12.6089 10.0925 12.9487 10.2333 13.303 10.2333C13.6573 10.2333 13.9971 10.0925 14.2476 9.84199C14.4982 9.59146 14.6389 9.25165 14.6389 8.89734C14.6389 8.54303 14.4982 8.20323 14.2476 7.95269C13.9971 7.70216 13.6573 7.5614 13.303 7.5614C12.9487 7.5614 12.6089 7.70216 12.3583 7.95269C12.1078 8.20323 11.967 8.54303 11.967 8.89734Z\" fill=\"#BDBDBD\"/>\n</svg>\n                <span className=\"small-text\">{props.numComments}</span>\n                </HashLink>\n                </div>\n                <div id=\"share\">\n                <svg width=\"18\" height=\"19\" viewBox=\"0 0 18 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path d=\"M15.972 18H2.028C1.46133 18 1 17.5105 1 16.9078V2.09225C1 1.49017 1.46133 1 2.028 1H7V1.70833H2.028C1.82867 1.70833 1.66667 1.88046 1.66667 2.09225V16.9078C1.66667 17.1195 1.82867 17.2917 2.028 17.2917H15.972C16.1713 17.2917 16.3333 17.1195 16.3333 16.9078V11.625H17V16.9078C17 17.5105 16.5393 18 15.972 18Z\" fill=\"#BDBDBD\"/>\n<path d=\"M7.66667 11.4175L7.19533 10.9167L16.4307 1.10342L17 1.35417V7.63283H16.3333V2.20912L7.66667 11.4175Z\" fill=\"#BDBDBD\"/>\n<path d=\"M17 1H10.758V1.70833H17V1Z\" fill=\"#BDBDBD\"/>\n<path d=\"M15.972 18H2.028C1.46133 18 1 17.5105 1 16.9078V2.09225C1 1.49017 1.46133 1 2.028 1H7V1.70833H2.028C1.82867 1.70833 1.66667 1.88046 1.66667 2.09225V16.9078C1.66667 17.1195 1.82867 17.2917 2.028 17.2917H15.972C16.1713 17.2917 16.3333 17.1195 16.3333 16.9078V11.625H17V16.9078C17 17.5105 16.5393 18 15.972 18Z\" stroke=\"#BDBDBD\" strokeWidth=\"0.5\"/>\n<path d=\"M7.66667 11.4175L7.19533 10.9167L16.4307 1.10342L17 1.35417V7.63283H16.3333V2.20912L7.66667 11.4175Z\" stroke=\"#BDBDBD\" strokeWidth=\"0.5\"/>\n<path d=\"M17 1H10.758V1.70833H17V1Z\" stroke=\"#BDBDBD\" strokeWidth=\"0.5\"/>\n</svg>\n\n                </div>\n            </div>\n            \n           \n\n           \n            \n        </div>\n    )\n\n    \n})\n\nexport default PostCard\n","import React from 'react'\nimport './FeatureCard.scss'\nimport './CollectionCard.scss'\nimport { Link } from 'react-router-dom';\n\n\nfunction CollectionCard(props) {\n    // set character display limit\n    const maxInfo = 30;\n    const maxDescription = 60;\n    let info = null;\n    if(props.designer && props.topic){\n        info = `${props.designer} / ${props.topic}`\n        if(info.length>maxInfo){\n            info = info.slice(0,maxInfo) + \"...\"\n        }\n    }\n    \n    let description = props.description;\n    if(description.length>maxDescription){\n        description = description.slice(0,maxDescription) + \"...\"\n    }\n    while(props.cover.length<4){\n        props.cover.push(props.cover[0])\n    }\n\n\n    return (\n            <Link to={\"/collection/\"+encodeURI(props.id)}>\n            <div className=\"card-customized collection-card\">\n                    <div className=\"left\">\n                        {props.cover.map(item=>(<div key={Math.random()}><img src={item} alt=\"cover\"></img></div>))}\n                    </div>\n\n                    <div className=\"right\">\n                        <div>\n                            <h3 className=\"card-title\">{props.title}</h3>\n                            <p>{info}</p>\n                            <p className=\"card-text small-text\">{description}</p>\n                            \n                        </div>\n                    </div>\n            </div>\n            </Link>\n    )\n}\n\nexport default CollectionCard\n","import {useEffect, useState} from 'react'\n\nexport default function GetPosts(pageNumber,searchInput=null) {\n    const [loading, setLoading] = useState(true);\n    const [error,setError] = useState(false);\n    const [posts,setPosts] = useState([]);\n    const [hasMore,setHasMore] = useState(false);\n\n    useEffect(()=>{\n        const query = {page:pageNumber,search:searchInput}\n        setLoading(true);\n        setError(false)\n        fetch('/api/get-posts',{\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(query), // body data type must match \"Content-Type\" header        \n        }).then(response=>response.json())\n        .then(data=>{\n            const matchPosts= data.sendPosts\n            setPosts(prev=>pageNumber === 1? [...matchPosts] : [...prev,...matchPosts])\n            setHasMore(matchPosts.length !== 0)\n            setLoading(false)\n        }).catch(error=>{\n            console.log(error);\n            setError(true)\n        })\n    \n\n    },[pageNumber,searchInput])\n\n    return {loading,error,posts,hasMore}\n}\n","import React, { useState, useEffect } from 'react';\nimport './Searchbar.scss';\nimport Debounce from './Debounce';\n\nexport default function Searchbar(props) {\n      // update search bar input\n    const [input,setInput] = useState(\"\");\n\n    const handleChanged = (event) => {\n        let inputVal = event.target.value.toLowerCase()\n        setInput(inputVal)\n    }\n    \n    // debounce input(search after typing)\n    const debouncedSearchTerm = Debounce(input,800);\n\n    useEffect(()=>{\n        props.getDebouncedInput(debouncedSearchTerm)\n    },[props,debouncedSearchTerm])\n\n    return (\n        <div>\n                <form autoComplete=\"off\" className=\"search-bar\" onSubmit={(event) => {\n                    event.preventDefault()\n                }}>\n                    <svg width=\"27\" height=\"27\" viewBox=\"0 0 27 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M21.1301 19.0993C22.9842 16.7279 23.8636 13.7385 23.5889 10.7409C23.3143 7.74333 21.9063 4.96348 19.6522 2.96852C17.3981 0.973555 14.4678 -0.086192 11.4591 0.00548867C8.45044 0.0971693 5.59009 1.33337 3.46166 3.46188C1.33323 5.59038 0.0971032 8.4508 0.00548168 11.4595C-0.0861398 14.4683 0.973646 17.3986 2.96862 19.6527C4.9636 21.9068 7.74343 23.3147 10.741 23.5893C13.7385 23.8639 16.7279 22.9844 19.0991 21.1303L24.5441 26.5751C24.6773 26.7094 24.8357 26.8161 25.0101 26.889C25.1846 26.9619 25.3718 26.9996 25.5609 27C25.75 27.0004 25.9373 26.9634 26.1121 26.8912C26.2869 26.819 26.4457 26.7131 26.5794 26.5793C26.7131 26.4456 26.8191 26.2868 26.8913 26.112C26.9634 25.9372 27.0004 25.7499 27 25.5608C26.9996 25.3717 26.9619 25.1845 26.8889 25.0101C26.816 24.8356 26.7094 24.6772 26.5751 24.5441L21.1301 19.0993ZM11.8391 20.7662C10.0735 20.7662 8.34756 20.2427 6.87949 19.2618C5.41142 18.2809 4.26719 16.8867 3.5915 15.2554C2.9158 13.6242 2.739 11.8292 3.08343 10.0975C3.42786 8.36581 4.27807 6.77512 5.52653 5.52661C6.77499 4.27811 8.36564 3.42786 10.0973 3.08339C11.829 2.73892 13.6239 2.9157 15.2552 3.59137C16.8864 4.26704 18.2806 5.41126 19.2615 6.87934C20.2424 8.34741 20.766 10.0734 20.766 11.839C20.7634 14.2058 19.822 16.4749 18.1485 18.1485C16.4749 19.8221 14.2059 20.7635 11.8391 20.7662V20.7662Z\" fill=\"#BDBDBD\" />\n                    </svg>\n\n                    <input type=\"text\" placeholder=\"Try search for 'teamLab'\" name=\"search\" id=\"search\" onChange={handleChanged} value={input} />\n                </form>\n        </div>\n    )\n}\n","import { useState, useEffect } from 'react'\n\nexport default function Debounce(value,delay) {\n    const [debounceVal, setDebounceVal] = useState(value)\n\n    useEffect(()=>{\n        const handler = setTimeout(()=>{\n            setDebounceVal(value)\n        },delay)\n        return ()=>clearTimeout(handler)\n    },[value,delay])\n    return debounceVal\n       \n}\n","import React, { useState, useRef, useCallback, useEffect } from 'react'\nimport './Home.scss'\nimport FeatureCard from '../components/FeatureCard'\nimport PostCard from '../components/PostCard'\nimport CollectionCard from '../components/CollectionCard';\nimport { Link } from 'react-router-dom';\nimport GetPosts from '../components/GetPosts';\nimport Searchbar from '../components/Searchbar';\n\nconst Home = (props) => {\n    const [page, setPage] = useState(1);\n    const [archivedArticles, setArchivedArticles] = useState(null)\n    const [debouncedInput, setDebouncedInput] = useState(\"\");\n    \n\n\n    // static lorems file\n    const lorems = require('../components/lorems')\n\n    // data for render\n    let renderSource = [];\n    if (props.data) {\n        // if active tab is home\n        if (props.tab === \"featured\") {\n            for (let item of props.data) {\n                const itemObj = {\n                    title: item.title,\n                    designer: item.designer,\n                    topic: item.topic,\n                    description: item.description,\n                    cover: item.image.thumb,\n                    id: item.id\n                }\n\n                renderSource.push(itemObj)\n            };\n        }\n\n        // if active tab is designers or topics\n        if (props.tab === \"designers\" || props.tab === \"topics\") {\n            for (let i=0;i<Object.keys(props.data).length;i++) {\n                // get cover thumbnail\n                let key = Object.keys(props.data)[i]\n                let covers = [];\n                props.data[key].map(item => covers.push(item.image.thumb))\n                if (key !== \"unknown\" && renderSource.length < 4) {\n                    const itemObj = {\n                        title: key,\n                        designer: null,\n                        topic: null,\n                        description: lorems[i],\n                        cover: covers.slice(0, 4),\n                        id: key\n                    }\n                    renderSource.push(itemObj)\n                }\n\n            }\n        }\n    }\n\n\n    // dynamically generate posts on the right hand side\n  const getDebouncedInput = (debouncedVal) =>{\n      setDebouncedInput(debouncedVal)\n  }\n\n    // if search bar value changes, reset posts\n    useEffect(() => {\n        setPage(1)\n    }, [debouncedInput])\n\n\n    // implemented infinite scrolling until no more posts from the server\n    let { loading, posts, hasMore } = debouncedInput === \"teamlab\" ? GetPosts(page, \"teamlab\") : GetPosts(page);\n    const observer = useRef();\n    const lastPost = useCallback(last => {\n        if (loading) return;\n        if (observer.current) observer.current.disconnect();\n        observer.current = new IntersectionObserver(\n            entries => {\n                // when the last item is in somewhere on the page\n                if (entries[0].isIntersecting && hasMore) {\n                    setPage(prevPage => prevPage + 1)\n\n                }\n            })\n        if (last) observer.current.observe(last);\n    }, [loading, hasMore]);\n\n\n    // fetch \"saved\" posts and render in the home page\n    useEffect(() => {\n        fetch('api/save-post')\n            .then(response => response.json())\n            .then(data => {\n                setArchivedArticles(data.lists)\n            })\n            .catch(error => {\n                console.log(error);\n\n            })\n    }, [])\n\n\n\n    return (\n        <div className=\"main-container home\">\n            <div className=\"feature-card-container\">\n                <div>\n                    <div><h3>{props.tab === \"featured\" ? \"Posts Picked For You\" : `${props.tab} picked for you`}</h3></div>\n                    <button type=\"button\">\n                        <svg width=\"22px\" height=\"22px\" viewBox=\"0 0 16 16\" className=\"bi bi-bell\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M8 16a2 2 0 0 0 2-2H6a2 2 0 0 0 2 2z\" />\n                            <path fillRule=\"evenodd\" d=\"M8 1.918l-.797.161A4.002 4.002 0 0 0 4 6c0 .628-.134 2.197-.459 3.742-.16.767-.376 1.566-.663 2.258h10.244c-.287-.692-.502-1.49-.663-2.258C12.134 8.197 12 6.628 12 6a4.002 4.002 0 0 0-3.203-3.92L8 1.917zM14.22 12c.223.447.481.801.78 1H1c.299-.199.557-.553.78-1C2.68 10.2 3 6.88 3 6c0-2.42 1.72-4.44 4.005-4.901a1 1 0 1 1 1.99 0A5.002 5.002 0 0 1 13 6c0 .88.32 4.2 1.22 6z\" />\n                        </svg>\n                    </button>\n                </div>\n\n                {props.tab === \"featured\" ? renderSource.map(item => (\n                    <FeatureCard\n                        key={Math.random()}\n                        cover={item.cover}\n                        title={item.title}\n                        designer={item.designer}\n                        topic={item.topic}\n                        description={item.description}\n                        id={item.id}\n\n                    />)) : renderSource.map(item => (\n                        <CollectionCard\n                            key={Math.random()}\n                            cover={item.cover}\n                            title={item.title}\n                            designer={item.designer}\n                            topic={item.topic}\n                            description={item.description}\n                            id={item.id}\n                        />\n                    ))\n                }\n\n                {props.tab !== \"featured\" && <Link to={'/all/' + props.tab} className=\"expand-btn to-all\">View All {props.tab}</Link>}\n\n            </div>\n\n            <div className=\"search-container\">\n                <Searchbar getDebouncedInput = {getDebouncedInput}/>\n\n                <div className=\"card-columns\">\n                    {debouncedInput === \"teamlab\" && <CollectionCard\n                        cover={['https://images.unsplash.com/photo-1504280539878-538b933c05b7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE2NDA4MH0',\n                            'https://images.unsplash.com/photo-1562461044-3729439149bb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE2NDA4MH0',\n                            'https://images.unsplash.com/photo-1522658429337-5917c5277aa2?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE2NDA4MH0',\n                            'https://images.unsplash.com/photo-1592228792327-51740e9ba5bb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=200&fit=max&ixid=eyJhcHBfaWQiOjE2NDA4MH0']}\n                        title=\"teamLab\"\n                        designer={null}\n                        topic={null}\n                        description={lorems[0]}\n                        id=\"teamLab\"\n\n                    />}\n\n                    {posts.map((item, index) => {\n                        if (posts.length === index + 1) {\n                            return (\n                                <PostCard\n                                    ref={lastPost}\n                                    key={Math.random()}\n                                    postImg={item.image.small}\n                                    title={item.title}\n                                    designer={item.designer}\n                                    topic={item.topic}\n                                    numLikes={item.likes}\n                                    numComments={Math.floor(item.likes * Math.random())}\n                                    author={item.author}\n                                    avatar={item.avatar}\n                                    tags={item.tags}\n                                    id={item.id}\n                                    saved={archivedArticles && archivedArticles.includes(item.id)}\n                                    description={item.description}\n                                />\n\n                            )\n\n                        } else {\n                            return (\n                                <PostCard\n                                    postImg={item.image.small}\n                                    key={Math.random()}\n                                    title={item.title}\n                                    designer={item.designer}\n                                    topic={item.topic}\n                                    numLikes={item.likes}\n                                    numComments={Math.floor(item.likes * Math.random())}\n                                    author={item.author}\n                                    avatar={item.avatar}\n                                    tags={item.tags}\n                                    id={item.id}\n                                    saved={archivedArticles && archivedArticles.includes(item.id)}\n                                    description={item.description}\n                                />\n                            )\n\n                        }\n                    })}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Home\n","import React, { useEffect, useState } from 'react'\nimport './Article.scss'\nimport Avatar from '../components/Avatar'\nimport Tag from '../components/Tag'\nimport FeatureCard from '../components/FeatureCard'\nimport Save from '../components/Save'\n\nexport default function Article(props) {\n\n    const [match, setMatch] = useState(null);\n    const [isSaved, setIsSaved] = useState(false);\n    const [input, setInput] = useState(\"\");\n    const [comments, setComments] = useState([])\n\n    useEffect(() => {\n        // send a request to server, and fetch selected article back\n        const postData = async (data) => {\n            const response = await fetch(\"/api/get-article\", {\n                method: 'POST', // *GET, POST, PUT, DELETE, etc.\n                credentials: 'same-origin', // include, *same-origin, omit\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(data), // body data type must match \"Content-Type\" header        \n            });\n\n            try {\n                const matchedFromSev = await response.json();\n                setMatch(matchedFromSev[0]);\n                return matchedFromSev\n            } catch (error) {\n                console.log(\"error\", error);\n                // appropriately handle the error\n            }\n        }\n\n        postData(props.match.params);\n\n    }, [props.match.params])\n\n    // fetch archived posts and update the saved icon\n    useEffect(() => {\n        fetch('/api/save-post')\n            .then(response => response.json())\n            .then(data => {\n                setIsSaved(data.lists.includes(props.match.params.id))\n            })\n            .catch(error => {\n                console.log(error);\n\n            })\n    }, [props.match.params.id])\n\n    return (\n        <div className=\"main-container\">\n            <article className=\"article\">\n                <div>\n                    <Avatar\n                        avatar={match && match.avatar}\n                        author={match && match.author}\n                    />\n                    <button type=\"button\" className=\"btn-small small-text\">Follow</button>\n                </div>\n                <div className=\"article-info\">\n                    <div>\n                        <h2>{match && match.title}</h2>\n                        <p>{`${match && match.designer} / ${match && match.topic}`}</p>\n                        {match && match.tags.map(tag => <Tag tag={tag} key={Math.random()} />)\n                        }\n                    </div>\n\n                    {/* social group */}\n                    <div className=\"social-icons\">\n                        {/* like */}\n                        <svg width=\"23\" height=\"22\" viewBox=\"0 0 19 18\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M5.55097 1.5126C6.6348 1.5126 7.66004 1.93613 8.42165 2.72269C8.45095 2.75294 8.48024 2.78319 8.50953 2.81345L9.56407 3.93277L10.6186 2.8437C11.3802 2.05714 12.4055 1.60336 13.4893 1.60336C14.5731 1.60336 15.5984 2.05714 16.3893 2.8437C17.9711 4.47731 17.9711 7.16975 16.3893 8.80336L9.56407 15.8521L3.76411 9.86218L3.79341 9.83193L2.70957 8.77311C2.68028 8.74286 2.65099 8.7126 2.6217 8.68235C1.86009 7.8958 1.44999 6.83697 1.44999 5.71765C1.44999 4.59832 1.88938 3.5395 2.65099 2.72269C3.4126 1.93613 4.43784 1.5126 5.55097 1.5126ZM5.55097 0C4.11562 0 2.70958 0.57479 1.62575 1.69412C-0.541915 3.93277 -0.541915 7.56303 1.62575 9.80168C1.65504 9.83193 1.68433 9.86218 1.71362 9.89244L9.56407 18L17.3852 9.89244C19.5529 7.65378 19.5236 4.02353 17.3852 1.78487C16.3014 0.665547 14.8953 0.0907566 13.46 0.0907566C12.0539 0.0907566 10.6186 0.635294 9.53478 1.75462C9.50548 1.72437 9.47619 1.69412 9.4469 1.66387C8.39236 0.544538 6.95702 0 5.55097 0Z\" fill=\"#FF0266\" />\n                        </svg>\n\n                        {/* save */}\n                        <Save id={props.match.params.id} saved={isSaved} />\n\n                        {/* share */}\n                        <svg width=\"22\" height=\"23\" viewBox=\"0 0 18 19\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M15.972 18H2.028C1.46133 18 1 17.5105 1 16.9078V2.09225C1 1.49017 1.46133 1 2.028 1H7V1.70833H2.028C1.82867 1.70833 1.66667 1.88046 1.66667 2.09225V16.9078C1.66667 17.1195 1.82867 17.2917 2.028 17.2917H15.972C16.1713 17.2917 16.3333 17.1195 16.3333 16.9078V11.625H17V16.9078C17 17.5105 16.5393 18 15.972 18Z\" fill=\"#FF0266\" />\n                            <path d=\"M7.66667 11.4175L7.19533 10.9167L16.4307 1.10342L17 1.35417V7.63283H16.3333V2.20912L7.66667 11.4175Z\" fill=\"#FF0266\" />\n                            <path d=\"M17 1H10.758V1.70833H17V1Z\" fill=\"#FF0266\" />\n                            <path d=\"M15.972 18H2.028C1.46133 18 1 17.5105 1 16.9078V2.09225C1 1.49017 1.46133 1 2.028 1H7V1.70833H2.028C1.82867 1.70833 1.66667 1.88046 1.66667 2.09225V16.9078C1.66667 17.1195 1.82867 17.2917 2.028 17.2917H15.972C16.1713 17.2917 16.3333 17.1195 16.3333 16.9078V11.625H17V16.9078C17 17.5105 16.5393 18 15.972 18Z\" stroke=\"#FF0266\" strokeWidth=\"0.5\" />\n                            <path d=\"M7.66667 11.4175L7.19533 10.9167L16.4307 1.10342L17 1.35417V7.63283H16.3333V2.20912L7.66667 11.4175Z\" stroke=\"#FF0266\" strokeWidth=\"0.5\" />\n                            <path d=\"M17 1H10.758V1.70833H17V1Z\" stroke=\"#FF0266\" strokeWidth=\"0.5\" />\n                        </svg>\n                    </div>\n\n                </div>\n\n                <img src={match && match.image.regular} className=\"img-fluid\" alt=\"art\"></img>\n\n                <h3>description</h3>\n                <p>{match && match.description}</p>\n\n                {/* closed icon */}\n\n                <div className=\"closed cursor\" onClick={props.history.goBack}>\n                    <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 2.90437L9.84652 12.7509L0 22.5974L2.90437 25.5372L12.7509 15.6907L22.5974 25.5372L25.5372 22.5974L15.6907 12.7509L25.5372 2.90437L22.5974 0L12.7509 9.84652L2.90437 0L0 2.90437Z\" fill=\"#BDBDBD\" />\n                    </svg>\n\n                </div>\n\n\n            </article>\n\n            <div className=\"comment-related\" id=\"comment\">\n                <div>\n                    <Avatar\n                        avatar={require('../images/avatar.jpg')}\n                        author={\"Angela Mollyson\"}\n                    />\n                    <div className=\"my-comment\">\n                        <textarea value={input} id=\"myComment\" name=\"myComment\" rows=\"4\" placeholder=\"Share your thoughts about this post...\" onChange={(e) => {\n                            setInput(e.target.value)\n                        }}></textarea>\n                        <div>\n                            <svg width=\"29\" height=\"29\" viewBox=\"0 0 29 29\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M14.5004 0C6.50519 0 0 6.50488 0 14.5004C0 22.496 6.50519 29 14.5004 29C22.4957 29 29 22.496 29 14.5004C29 6.50488 22.4957 0 14.5004 0ZM14.5004 1.37762C21.7365 1.37762 27.6229 7.26437 27.6229 14.5004C27.6229 21.7365 21.7365 27.6233 14.5004 27.6233C7.26442 27.6233 1.37707 21.7365 1.37707 14.5004C1.37707 7.26437 7.26442 1.37762 14.5004 1.37762ZM7.9271 8.1295C7.70681 8.14857 7.49914 8.27381 7.38381 8.48175C7.19836 8.81354 7.31864 9.23255 7.65097 9.41749L9.76319 10.5943L7.67249 11.4467C7.32042 11.5904 7.15138 11.9928 7.29505 12.3448C7.40384 12.6119 7.66164 12.7733 7.93338 12.7733C8.01968 12.7733 8.10756 12.7566 8.19248 12.7222L11.6118 11.3275C11.8574 11.2275 12.023 10.9958 12.0386 10.7315C12.0546 10.4671 11.918 10.2173 11.6871 10.0888L8.32068 8.21465C8.19623 8.14513 8.05928 8.11806 7.9271 8.1295ZM20.8775 8.1295C20.7454 8.11806 20.6092 8.14513 20.4848 8.21465L17.1174 10.0888C16.8952 10.2123 16.7592 10.4472 16.7633 10.701C16.7674 10.9548 16.9113 11.1863 17.1371 11.3024L20.5045 13.035C20.605 13.0868 20.7122 13.1112 20.8183 13.1112C21.068 13.1112 21.309 12.9756 21.4315 12.7383C21.6055 12.4001 21.4726 11.9846 21.1348 11.8106L18.9114 10.666L21.1545 9.41749C21.4864 9.23255 21.6057 8.81354 21.4208 8.48175C21.3048 8.27381 21.0976 8.14857 20.8775 8.1295ZM20.8757 16.1774L8.35385 16.2662C7.97562 16.2689 7.6698 16.5764 7.6698 16.9545C7.6698 20.0173 10.1724 22.4166 13.3672 22.4166H15.8721C19.0669 22.4166 21.5696 19.9786 21.5696 16.8658C21.5696 16.6822 21.4969 16.5058 21.3661 16.3764C21.2357 16.247 21.068 16.1751 20.8757 16.1774ZM20.136 17.5595C19.8032 19.559 18.0497 21.0399 15.8721 21.0399H13.3672C11.1515 21.0399 9.42652 19.6191 9.10245 17.6384L20.136 17.5595Z\" fill=\"#BDBDBD\" />\n                            </svg>\n\n                            <button type=\"click\" className=\"btn-small\" onClick={() => {\n                                setComments([input, ...comments]);\n                                setInput(\"\");\n                            }}\n                            >Send</button>\n                        </div>\n                    </div>\n\n                    <h3>Comments</h3>\n                    {comments.length ? comments.map(\n                        comment => <div className=\"single-comment\" key={Math.random()}>\n                            <img src={require('../images/avatar.jpg')} alt=\"avatar\"></img>\n                            <div>\n                                <p className=\"small-text\">Angela Mollyson</p>\n                                <p>{comment}</p>\n                            </div>\n                        </div>) : null}\n                    <div className=\"single-comment\">\n                        <img src=\"https://images.unsplash.com/profile-1533300847109-02ffc5fbac4b?ixlib=rb-1.2.1&q=80&fm=jpg&crop=faces&cs=tinysrgb&fit=crop&h=128&w=128\" alt=\"avatar\"></img>\n                        <div>\n                            <p className=\"small-text\">Rodolfo Cuadros</p>\n                            <p>It is a long established fact that a reader will be distracted by the readable content of a page when looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of letters.</p>\n                        </div>\n                    </div>\n\n                    <div className=\"single-comment\">\n                        <img src=\"https://images.unsplash.com/profile-1501119379465-b47a1a271ac7?ixlib=rb-1.2.1&q=80&fm=jpg&crop=faces&cs=tinysrgb&fit=crop&h=128&w=128\" alt=\"avatar\"></img>\n                        <div>\n                            <p className=\"small-text\">Mahdis Mousavi</p>\n                            <p>Cool project!</p>\n                        </div>\n                    </div>\n\n                    <div className=\"single-comment\">\n                        <img src=\"https://images.unsplash.com/profile-1595949293924-5216bda1eef7image?ixlib=rb-1.2.1&q=80&fm=jpg&crop=faces&cs=tinysrgb&fit=crop&h=128&w=128\" alt=\"avatar\"></img>\n                        <div>\n                            <p className=\"small-text\">Jonas Denil</p>\n                            <p>Many desktop publishing packages and web page editors now use Lorem Ipsum as their default model text.</p>\n                        </div>\n                    </div>\n                </div>\n\n\n                <div className=\"related-box\">\n                    <h2>Related Posts</h2>\n                    <FeatureCard\n                        cover=\"https://images.unsplash.com/photo-1556925159-d25835f7d37d?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max&ixid=eyJhcHBfaWQiOjE2NDA4MH0\"\n                        title=\"project mapping\"\n                        designer=\"Raummaschine\"\n                        topic=\"science\"\n                        description=\"Eiusmod ad nulla reprehenderit quis sunt. Dolore qui in laborum sunt proident officia sunt duis incididunt ad eiusmod fugiat. Elit aliqua eu nisi exercitation officia. Esse amet labore sunt non do. Qui duis qui consectetur Lorem tempor cillum ut qui id consequat ex pariatur commodo. Sit in mollit sint quis mollit. Sunt velit esse sit exercitation consectetur laboris officia.\"\n                        id=\"at7d44h27X4\"\n                    />\n\n                    <FeatureCard\n                        cover=\"https://images.unsplash.com/photo-1533144169699-97ec15a75e92?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=400&fit=max&ixid=eyJhcHBfaWQiOjE2NDA4MH0\"\n                        title=\"crystal universe\"\n                        designer=\"teamLab\"\n                        topic=\"Art & Culture\"\n                        description=\"Lights at the ArtScience Museum Singapore\"\n                        id=\"WNk-f-TnZDw\"\n                    />\n\n                    <FeatureCard\n                        cover=\"https://images.unsplash.com/photo-1565841424346-c2bf899b27bb?ixlib=rb-1.2.1&q=80&fm=jpg&crop=entropy&cs=tinysrgb&w=1080&fit=max&ixid=eyJhcHBfaWQiOjE2NDA4MH0\"\n                        title=\"touch\"\n                        designer=\"Petey Cruiser\"\n                        topic=\"daily life\"\n                        description=\"Portland Festival of Lights\"\n                        id=\"I4YsI1zWq_w\"\n                    />\n                </div>\n            </div>\n        </div>\n\n\n    )\n}\n","import React from 'react'\nimport './All.scss'\nimport { LoremIpsum } from \"lorem-ipsum\";\nimport CollectionCard from '../components/CollectionCard';\n\nexport default function All(props) {\n    const renderSources = [];\n    // configure lorem generator\n    const lorem = new LoremIpsum({\n        sentencesPerParagraph: {\n            max: 4,\n            min: 2\n        },\n        wordsPerSentence: {\n            max: 16,\n            min: 4\n        }\n    });\n    console.log(props.data)\n\n    for (let key of Object.keys(props.data)){\n        if(key !== \"unknown\"){\n            let covers = [];\n            props.data[key].map(item=>covers.push(item.image.thumb));\n            let itemObj = {\n                title:key,\n                designer:null,\n                topic:null,\n                description:lorem.generateParagraphs(1),\n                cover:covers.slice(0,4),\n                id:key\n\n        };\n        renderSources.push(itemObj);\n        \n\n    }}\n\n    return (\n        <div className=\"main-container\">\n            <h2>all posts for you</h2>\n            <div className=\"post-container\">\n                {props.data && renderSources.map(renderSource=>(\n                    <CollectionCard\n                    key = {Math.random()}\n                    cover={renderSource.cover}\n                    title={renderSource.title}\n                    designer={renderSource.designer}\n                    topic={renderSource.topic}\n                    description={renderSource.description}\n                    id={renderSource.id}\n                    />\n                ))}\n\n\n            </div>\n\n\n        </div>\n    )\n}\n","import React, { useState } from 'react'\nimport './NewPosts.scss'\nimport { Link } from 'react-router-dom';\nimport {useForm} from 'react-hook-form'\n\nexport default function NewPost(props) {\n\n    const topics = [\"art and culture\", \"human and nature\", \"technology\", \"science\", \"daily life\", \"society\", \"other\"]\n\n    const [input, setInput] = useState(\"\");\n    const [isClicked, setIsClicked] = useState(false)\n    // react forms\n    const {register} = useForm();\n\n    // if at the add new post page, set the active tab to featured\n    props.getTabName(\"featured\")\n\n    function handleChange(event) {\n        let value = event.target.value;\n        if (value.length > 200) {\n            value = value.slice(0, 200)\n        }\n        setInput(value);\n    }\n\n    function handleClicked() {\n        setIsClicked(true)\n    }\n\n    return (\n        <div className=\"main-container\">\n            <div className=\"page-head\">\n                <h2>New Posts</h2>\n                <Link to=\"/\"><svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 2.90437L9.84652 12.7509L0 22.5974L2.90437 25.5372L12.7509 15.6907L22.5974 25.5372L25.5372 22.5974L15.6907 12.7509L25.5372 2.90437L22.5974 0L12.7509 9.84652L2.90437 0L0 2.90437Z\" fill=\"#BDBDBD\" />\n                </svg>\n                </Link>\n            </div>\n            <div className=\"new-post\">\n                <div className=\"image-input\">\n                    <img className={isClicked ? null : \"hidden\"} src=\"https://images.unsplash.com/photo-1495232714953-ef7f41577786?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80\" alt=\"uploaded\"></img>\n                    <button type=\"button\" id=\"add-image\" onClick={handleClicked} className={isClicked ? \"hidden\" : null}>+</button>\n                </div>\n                <form action=\"http://localhost:5000/api/my-posts\" method=\"post\">\n                    <input type=\"text\" id=\"image\" name=\"image\" ref={register} defaultValue=\"https://images.unsplash.com/photo-1495232714953-ef7f41577786?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1000&q=80\" className=\"hidden\"></input>\n                    \n                    <div className=\"form-group\">\n                        <label className=\"small-text\" htmlFor=\"title\">Title</label>\n                        <input className=\"form-control\" type=\"text\" id=\"title\" name=\"title\"  ref={register} defaultValue=\"untitled\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"small-text\" htmlFor=\"designer\">Designer</label>\n                        <input className=\"form-control\" type=\"text\" id=\"designer\" name=\"designer\" ref={register} defaultValue=\"unknown\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"small-text\" htmlFor=\"topic\">Topic</label>\n                        <select className=\"form-control\" name=\"topic\"  ref={register} id=\"f-topic\">\n                            {topics.map(\n                                (topic) => <option key={Math.random()} value={topic}>{topic}</option>)}\n                        </select>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"small-text\" htmlFor=\"tags\">Tags (optional)</label>\n                        <input className=\"form-control\" type=\"text\" id=\"tags\" name=\"tags\"  ref={register} defaultValue=\"culture,texture\"></input>\n                    </div>\n                    <div className=\"form-group\">\n                        <label className=\"small-text\" htmlFor=\"description\">Description(optional, less than 200 characters)</label>\n                        <textarea\n                            className=\"form-control\"\n                            type=\"text\"\n                            id=\"description\"\n                            name=\"description\"\n                            rows=\"4\"\n                            ref={register} \n                            onChange={handleChange}\n                            value={input}>\n                        </textarea>\n                        <p className=\"small-text counter\">{200 - input.length} characters left</p>\n                    </div>\n                    <button type=\"submit\" className=\"btn btn-primary btn-lg btn-block btn-big\" >Post</button>\n\n\n                </form>\n            </div>\n\n\n\n        </div>\n    )\n}\n","import React,{useState,useEffect} from 'react'\nimport './MyArchive.scss'\nimport PostCard from '../components/PostCard'\n\nexport default function MyArchive() {\n    const [foundArticles, setFoundArticles] = useState([])\n\n    // fetch all saved posts from server\n    useEffect(() => {\n        fetch('/api/save-post')\n        .then(response => response.json())\n        .then(data=>{\n            console.log(data.articles)\n            setFoundArticles(data.articles)\n        })\n        .catch(error => {\n                console.log(error);\n\n            })\n    }, [])\n\n    return (\n        <div className=\"main-container\">\n            <div className=\"page-head\">\n                <h2>My Archives</h2>\n            </div>\n            \n            <div className=\"archive-box\">\n            {foundArticles.length ?  foundArticles.map(article=>(\n                <PostCard\n                        key= {Math.random()}\n                        postImg={article.image.small}\n                        title = {article.title}\n                        designer={article.designer}\n                        topic = {article.topic}\n                        numLikes= {article.likes}\n                        numComments={article.likes * Math.random()}\n                        author={article.author}\n                        avatar={article.avatar}\n                        tags={article.tags}\n                        id={article.id}\n                        description={article.description}\n                        type=\"archive\"\n                    />\n\n            )):<p>You don't have any archive yet :(</p>}\n            \n            </div>\n        </div>\n    )\n}\n","import React from 'react';\nimport './Collection.scss';\nimport PostCard from '../components/PostCard';\nimport { LoremIpsum } from 'lorem-ipsum';\nimport { Link } from 'react-router-dom'\n\n\n\nexport default function Collection(props) {\n\n    const matchedName = props.browserProps.match.params.name\n\n    const lorem = new LoremIpsum({\n        sentencesPerParagraph: {\n            max: 4,\n            min: 2\n        },\n        wordsPerSentence: {\n            max: 16,\n            min: 4\n        }\n    });\n\n\n    return (\n        <div className=\"main-container\">\n            {/* closed icon */}\n                <div className=\"collection-closed cursor\" onClick={props.browserProps.history.goBack}>\n                    <svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 2.90437L9.84652 12.7509L0 22.5974L2.90437 25.5372L12.7509 15.6907L22.5974 25.5372L25.5372 22.5974L15.6907 12.7509L25.5372 2.90437L22.5974 0L12.7509 9.84652L2.90437 0L0 2.90437Z\" fill=\"#BDBDBD\" />\n                    </svg>\n\n                </div>\n            <div className=\"collection-head\">\n                <div>\n                    <h2>{matchedName} Collection</h2>\n                    <p className=\"small-text\">{lorem.generateParagraphs(1)}</p>\n                </div>\n\n                <form className=\"search-bar\">\n                    <svg width=\"27\" height=\"27\" viewBox=\"0 0 27 27\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M21.1301 19.0993C22.9842 16.7279 23.8636 13.7385 23.5889 10.7409C23.3143 7.74333 21.9063 4.96348 19.6522 2.96852C17.3981 0.973555 14.4678 -0.086192 11.4591 0.00548867C8.45044 0.0971693 5.59009 1.33337 3.46166 3.46188C1.33323 5.59038 0.0971032 8.4508 0.00548168 11.4595C-0.0861398 14.4683 0.973646 17.3986 2.96862 19.6527C4.9636 21.9068 7.74343 23.3147 10.741 23.5893C13.7385 23.8639 16.7279 22.9844 19.0991 21.1303L24.5441 26.5751C24.6773 26.7094 24.8357 26.8161 25.0101 26.889C25.1846 26.9619 25.3718 26.9996 25.5609 27C25.75 27.0004 25.9373 26.9634 26.1121 26.8912C26.2869 26.819 26.4457 26.7131 26.5794 26.5793C26.7131 26.4456 26.8191 26.2868 26.8913 26.112C26.9634 25.9372 27.0004 25.7499 27 25.5608C26.9996 25.3717 26.9619 25.1845 26.8889 25.0101C26.816 24.8356 26.7094 24.6772 26.5751 24.5441L21.1301 19.0993ZM11.8391 20.7662C10.0735 20.7662 8.34756 20.2427 6.87949 19.2618C5.41142 18.2809 4.26719 16.8867 3.5915 15.2554C2.9158 13.6242 2.739 11.8292 3.08343 10.0975C3.42786 8.36581 4.27807 6.77512 5.52653 5.52661C6.77499 4.27811 8.36564 3.42786 10.0973 3.08339C11.829 2.73892 13.6239 2.9157 15.2552 3.59137C16.8864 4.26704 18.2806 5.41126 19.2615 6.87934C20.2424 8.34741 20.766 10.0734 20.766 11.839C20.7634 14.2058 19.822 16.4749 18.1485 18.1485C16.4749 19.8221 14.2059 20.7635 11.8391 20.7662V20.7662Z\" fill=\"#BDBDBD\" />\n                    </svg>\n\n                    <input type=\"text\" placeholder={`search ${matchedName}'s projects`} name=\"collection-search\" id=\"collection-search\" />\n                </form>\n            </div>\n\n            <div className=\"collection-feature-container\">\n                <h2>featured projects</h2>\n                <div>\n\n                    {props.data && props.data[matchedName].slice(0, 4).map(item => {\n                        const image = item.image.small;\n\n                        return (<Link to={\"/article/\" + item.id} key={Math.random()}><div className=\"square\" style={{ backgroundImage: `url(${image})` }}>\n                        </div></Link>)\n\n                    })}\n                </div>\n            </div>\n\n            <div className=\"all-collection\">\n                <h2>All About {matchedName}</h2>\n                <div className=\"card-columns\">\n                    {props.data && props.data[matchedName].map(\n                        item => (<PostCard\n                            key={Math.random()}\n                            postImg={item.image.small}\n                            title={item.title}\n                            designer={item.designer}\n                            topic={item.topic}\n                            numLikes={item.likes}\n                            numComments={Math.floor(item.likes * Math.random())}\n                            author={item.author}\n                            avatar={item.avatar}\n                            tags={item.tags}\n                            description={item.description}\n                            id={item.id}\n                        />\n                        )\n                    )}\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React from 'react'\nimport './MyPostCard.scss'\n\nexport default function MyPostCard(props) {\n \n    const option = new Intl.DateTimeFormat(\"en\" , {\n        timeStyle: \"short\",\n        dateStyle: \"short\"\n      });\n    const now = option.format(Date.now())\n    let content = props.description\n    content = content.slice(0,200)\n\n    return (\n        <div className=\"my-post-card-container\">\n                <div className=\"row no-gutters\">\n                    <div className=\"col\">\n                        <img src={props.image} alt=\"cover\"></img>\n                    </div>\n                    <div className=\"col info\">\n                        <div>\n                            <p className=\"small-text\">Time</p>\n                            <p>{now}</p>\n                        </div>\n                        <div>\n                            <p className=\"small-text\">Designer</p>\n                            <p>{props.designer}</p>\n                        </div>\n                        <div>\n                            <p className=\"small-text\">Topic</p>\n                            <p>{props.topic}</p>\n                        </div>\n                        <div>\n                            <p className=\"small-text\">Tags</p>\n                            <p>{props.tags.join(\" / \")}</p>\n                        </div>\n\n                    </div>\n\n\n                </div>\n                <div>\n                    <p className=\"small-text\">Description</p>\n                    <p>{content}</p>\n                </div>\n                <button type=\"button\" className=\"expand-btn\" onClick={()=>{\n                    props.delete(props.id)\n                }}>Delete</button>\n\n            </div>\n\n\n    )\n}\n","import React,{useState,useEffect} from 'react'\nimport './MyPosts.scss'\nimport MyPostCard from '../components/MyPostCard'\nimport { Link } from 'react-router-dom'\n\nexport default function MyPosts() {\n    const [newPosts, setNewPosts] = useState(null)\n    const [deletedPostId,setDeletedPostId] = useState(null)\n    // fetch all my posts from server\n    useEffect(() => {\n        fetch('/api/my-posts')\n        .then(response => response.json())\n        .then(data=>{\n            setNewPosts(data.myPosts)\n        })\n        .catch(error => {\n                console.log(error);\n\n            })\n    }, [])\n\n\n    // delete a new post in server side\n    const deletePost = (id)=>{\n        setDeletedPostId(id)\n    }\n   \n    useEffect(() => {\n        deletedPostId && fetch(\"/api/delete-post\", {\n            method: 'POST', // *GET, POST, PUT, DELETE, etc.\n            credentials: 'same-origin', // include, *same-origin, omit\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ id: deletedPostId }), // body data type must match \"Content-Type\" header        \n        })\n            .then(res => res.json())\n            .then(data => {\n                setNewPosts(data.myPosts)\n            })\n            .catch(error => console.log(error))\n    }, [deletedPostId])\n\n    return (\n        <div className=\"main-container\">\n            <div className=\"page-head\">\n            <h2>my posts</h2>\n            <Link to=\"/\"><svg width=\"26\" height=\"26\" viewBox=\"0 0 26 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fillRule=\"evenodd\" clipRule=\"evenodd\" d=\"M0 2.90437L9.84652 12.7509L0 22.5974L2.90437 25.5372L12.7509 15.6907L22.5974 25.5372L25.5372 22.5974L15.6907 12.7509L25.5372 2.90437L22.5974 0L12.7509 9.84652L2.90437 0L0 2.90437Z\" fill=\"#BDBDBD\" />\n                </svg>\n            </Link>\n            </div>\n            \n            <div className=\"my-posts-container\">\n                <div className=\"my-posts-new\">\n                    <Link to=\"/new-post\">\n                        <button type=\"button\">+</button>\n                    </Link> \n                </div>\n\n                {newPosts && newPosts.map(post=>(<MyPostCard \n                    delete = {deletePost}\n                    title={post.title}\n                    designer={post.designer}\n                    image={post.image.regular}\n                    description={post.description}\n                    tags={post.tags}\n                    topic={post.topic}\n                    id={post.id}\n                    key={Math.random()}\n                />))}\n            </div>\n        </div>\n    )\n}\n","import React,{useState} from 'react'\nimport './MobileNav.scss'\nimport { Link } from 'react-router-dom'\n\nexport default function MobileNav(props) {\n\n    const [isHamburgerShown, setIsHamburgerShown] = useState(false)\n    const [isAccountMenuShown, setIsAccountMenuShown] = useState(false)\n\n    function toggleHamburgerMenu(){\n        isHamburgerShown? setIsHamburgerShown(false):setIsHamburgerShown(true)\n        setIsAccountMenuShown(false)\n    }\n\n    function toggleAccountMenu(){\n        isAccountMenuShown ? setIsAccountMenuShown(false):setIsAccountMenuShown(true);\n        setIsHamburgerShown(false)\n    }\n    return (\n        <nav className=\"navbar-mobile-container\">\n            <div className=\"navbar-mobile\">\n                <div className=\"mobile-head\">\n                {/* menu icon */}\n                    <div onClick={toggleHamburgerMenu}>\n                        <svg width=\"32\" height=\"26\" viewBox=\"0 0 32 26\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M0 0V4H31.2V0H0ZM0 10.8V14.8H31.2V10.8H0ZM0 21.6V25.6H31.2V21.6H0Z\" fill=\"#FF0266\" />\n                        </svg>\n                    </div>\n                    {/* website logo */}\n                    <Link to=\"/\"><img src={require('../images/logo-ia.svg')} alt=\"logo\"></img></Link>\n                    <div className=\"nav-avatar\" onClick={toggleAccountMenu}></div>\n                </div>\n\n                {/* hamburger menu */}\n                <div className={isHamburgerShown? \"mobile-menu\":\"hidden\"}>\n                    {/* home tab */}\n                    <div >\n                    <Link to=\"/\">\n                        <div><svg width=\"59\" height=\"47\" viewBox=\"0 0 59 47\" xmlns=\"http://www.w3.org/2000/svg\">\n                            <path d=\"M29.5397 0.00032196C29.8492 0.00693129 30.138 0.109031 30.4155 0.29866L58.4405 22.3298C59.0853 22.8454 59.1768 23.7969 58.694 24.4182C58.2182 25.0304 57.2062 25.1285 56.5968 24.6477L29.4936 3.35088L2.3905 24.6477C1.78112 25.1285 0.796877 25.0267 0.316285 24.4182C-0.160701 23.8141 -0.109415 22.8107 0.546754 22.3298L11.0561 14.0681V1.46906C11.0562 1.07954 11.2116 0.705961 11.4882 0.430527C11.7648 0.155093 12.14 0.000360907 12.5311 0.00032196H18.4311C18.8223 0.000360907 19.1975 0.155093 19.4741 0.430527C19.7507 0.705961 19.9061 1.07954 19.9061 1.46906V7.11453L28.5718 0.29866C28.9 0.0833205 29.2303 -0.00610378 29.5397 0.00032196ZM16.9561 2.9378H14.0061V11.7502L16.9561 9.43239V2.9378ZM47.9312 19.7595L50.8812 22.0773V45.5313C50.8811 45.9208 50.7257 46.2944 50.4491 46.5698C50.1725 46.8452 49.7973 47 49.4062 47H36.8686C36.4775 47 36.1023 46.8452 35.8257 46.5698C35.5491 46.2944 35.3937 45.9208 35.3936 45.5313V32.3126H23.5936V45.5313C23.5936 45.9208 23.4382 46.2944 23.1616 46.5698C22.885 46.8452 22.5098 47 22.1186 47H9.58113C9.18995 47 8.8148 46.8452 8.53819 46.5698C8.26159 46.2944 8.10617 45.9208 8.10613 45.5313V22.0773L11.0561 19.7595V44.0625H20.6436V30.8439C20.6437 30.4544 20.7991 30.0809 21.0757 29.8054C21.3523 29.53 21.7275 29.3752 22.1186 29.3752H36.8686C37.2598 29.3752 37.635 29.53 37.9116 29.8054C38.1882 30.0809 38.3436 30.4544 38.3436 30.8439V44.0625H47.9312V19.7595Z\" fill=\"#BDBDBD\" />\n                        </svg>\n                        </div>\n\n                        <p className=\"small-text\">Home</p>\n                    </Link>\n                    </div>\n                    {/* designer tab */}\n                    <div onClick={()=>{\n                        props.getTabName('designers');\n                        window.scrollTo(0, 0);}}>\n                    <Link to=\"/all/designers\">\n                        <div >\n                            <svg width=\"50\" height=\"58\" viewBox=\"0 0 50 58\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M11.6871 20.3208C12.2024 20.3208 12.6201 19.9035 12.6201 19.3889C12.6201 18.8742 12.2024 18.4569 11.6871 18.4569C11.1718 18.4569 10.7541 18.8742 10.7541 19.3889C10.7541 19.9035 11.1718 20.3208 11.6871 20.3208Z\" fill=\"#FF0266\" />\n                                <path d=\"M49.2871 23.8938L41.4817 21.2211V18.6629C41.4817 9.64102 34.1337 2.30167 25.1011 2.30167H22.3619C21.5626 2.30167 20.7773 2.36211 20.0082 2.47315C18.7558 0.930508 15.8505 1.68953 13.7107 2.52094C11.2769 3.46621 8.7086 0 8.7086 0C7.23097 3.87384 9.62122 5.79389 11.2853 6.62249C8.02749 9.61501 5.98132 13.9042 5.98132 18.6629V20.5717L0.224193 27.9194C-0.0248927 28.2371 -0.0699258 28.6679 0.106686 29.0313C0.284002 29.3939 0.652002 29.6237 1.05589 29.6237H6.08405C6.10938 30.2647 6.11923 30.9049 6.12838 31.5311C6.21844 37.3447 6.31203 43.3522 18.8768 43.6671V49.5186L17.2915 50.0626C16.9791 50.1694 16.7349 50.4168 16.6315 50.7309L14.6965 56.6169C14.5143 57.17 14.8161 57.7653 15.3699 57.9473C15.479 57.9831 15.5894 58 15.6992 58C16.1432 58 16.5562 57.7182 16.7019 57.274L18.4736 51.8856L41.1538 44.1035L42.3099 57.0386C42.3613 57.6184 42.8728 58.0429 43.4554 57.9951C44.0352 57.9431 44.4644 57.4314 44.4124 56.8516L43.1374 42.5763C43.1085 42.2538 42.9326 41.9621 42.6603 41.7857C42.3873 41.6093 42.0489 41.5671 41.7428 41.6733L41.481 41.7632V26.6628L47.6301 28.7614C47.7412 28.7994 47.8566 28.8183 47.9713 28.8183C48.1318 28.8183 48.2915 28.7818 48.4378 28.7101C48.689 28.5864 48.8811 28.3671 48.9712 28.1022L49.9436 25.2298C50.1308 24.6795 49.8367 24.0829 49.2871 23.8938ZM39.3708 42.4864L20.9884 48.794V42.6255C20.9884 42.0429 20.5156 41.5713 19.933 41.5713C10.3558 41.5713 8.68468 38.6582 8.34131 34.3241H11.6104C12.193 34.3241 12.6658 33.8525 12.6658 33.2699C12.6658 32.6872 12.193 32.2157 11.6104 32.2157H8.25195C8.24772 31.9795 8.2435 31.7413 8.23998 31.4988C8.22521 30.524 8.20902 29.5169 8.13796 28.4971C8.09996 27.9447 7.63978 27.516 7.08532 27.516H3.22237L7.86847 21.5865C8.01341 21.401 8.09222 21.1726 8.09222 20.9371V18.665C8.09222 10.8056 14.4939 4.41218 22.3619 4.41218H25.1011C32.9699 4.41218 39.3708 10.8063 39.3708 18.665V20.5L34.6171 18.8716C34.4503 18.7121 34.2779 18.556 34.0795 18.4239C33.2809 17.8947 32.3429 17.7007 31.3754 17.8476L20.7492 14.2591C20.6514 14.2261 20.55 14.2078 20.4466 14.2043L15.1806 14.0258C14.7282 14.0159 14.294 14.3013 14.1449 14.7419C13.9957 15.1826 14.1533 15.6689 14.5333 15.9388L18.8276 18.9897C18.9113 19.0494 19.0035 19.0965 19.1013 19.1295L26.9243 21.7706C26.8384 21.9808 26.7561 22.1937 26.6878 22.4151C26.5147 22.971 26.8258 23.5621 27.3823 23.735C27.9403 23.9072 28.5307 23.5965 28.7038 23.0413C29.1632 21.564 30.1082 20.4445 31.2326 20.046C31.6703 19.89 32.3183 19.7866 32.9122 20.1802C33.7889 20.7628 34.2758 22.3146 34.247 24.4385C34.2245 26.1821 33.5405 28.377 32.4365 29.0313C32.2564 29.1381 31.7069 29.4635 30.6331 28.8963C30.1181 28.6244 29.4799 28.8211 29.2068 29.3356C28.9345 29.85 29.1316 30.4882 29.6466 30.7602C30.4375 31.1776 31.1397 31.3315 31.7456 31.3315C32.4823 31.3315 33.0768 31.1031 33.5145 30.8445C35.3038 29.784 36.2087 27.1154 36.3417 24.9101L39.3722 25.9439V42.4864H39.3708ZM28.0128 19.9117L19.9238 17.1807L18.6158 16.2509L20.22 16.3057L28.7002 19.1689C28.454 19.3917 28.2281 19.6447 28.0128 19.9117ZM47.3113 26.4246L36.2565 22.652C36.2122 22.297 36.1447 21.9442 36.0602 21.5935L47.6083 25.5482L47.3113 26.4246Z\" fill=\"#FF0266\" />\n                            </svg>\n                        </div>\n                        <p className=\"small-text\">Designer</p>\n                    </Link>\n                    </div>\n                    {/* topic tab */}\n                    <div onClick={()=>{\n                        props.getTabName('topics');\n                        window.scrollTo(0, 0);}}>\n                    <Link to=\"/all/topics\">\n                        <div>\n                            <svg width=\"56\" height=\"60\" viewBox=\"0 0 56 60\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M42.6976 28.3279C42.6976 20.1312 36.0788 13.4426 27.9675 13.4426C19.8563 13.4426 13.2375 20.1312 13.2375 28.3279C13.2375 29.5082 13.3673 30.6885 13.6918 31.8689C14.0811 33.7705 14.7949 34.9508 15.7682 36.5902C15.9629 36.9836 16.2225 37.3771 16.482 37.8361C16.8065 38.3607 17.066 38.8853 17.3905 39.3443C18.6883 41.5082 19.467 42.7541 19.467 45.3115V51.4754C19.467 53.0492 20.5701 54.2951 22.0626 54.5574C22.7115 57.9017 24.6582 60 27.9675 60C31.2769 60 33.2885 57.9017 33.8725 54.5574C35.365 54.2951 36.4681 52.9836 36.4681 51.4754V45.3115C36.4681 42.7541 37.2468 41.4426 38.5446 39.3443C38.8042 38.8853 39.1286 38.3607 39.4531 37.8361C39.7126 37.3771 39.9722 36.9836 40.1668 36.5902C41.1402 34.9508 41.854 33.7705 42.2433 31.8689C42.5678 30.6885 42.6976 29.5082 42.6976 28.3279ZM33.9374 46.8852H22.1274V45.3771C22.1274 45.0492 22.1275 44.7869 22.0626 44.5246H33.9374C33.9374 44.7869 33.8725 45.0492 33.8725 45.3771V46.8852H33.9374ZM33.3534 52.0656H22.5817C22.2572 52.0656 22.0626 51.8033 22.0626 51.541V49.5082H33.8725V51.541C33.9374 51.8033 33.6778 52.0656 33.3534 52.0656ZM27.9675 57.4427C27.2538 57.4427 25.4368 57.4426 24.723 54.6885H31.2769C30.5631 57.4426 28.6813 57.4427 27.9675 57.4427ZM39.7126 31.3443C39.3882 32.7869 38.8691 33.7705 37.9606 35.2787C37.701 35.6721 37.5064 36.0656 37.2468 36.5246C36.9223 37.0492 36.6628 37.5738 36.4032 37.9672C35.6246 39.2787 34.9108 40.459 34.4565 41.8361H21.6083C21.1541 40.459 20.5052 39.2787 19.6616 37.9672C19.4021 37.5082 19.0776 37.0492 18.8181 36.5246C18.5585 36.0656 18.2989 35.6066 18.1043 35.2787C17.1958 33.7049 16.6767 32.7869 16.3522 31.2787C16.0927 30.2951 15.9629 29.3115 15.9629 28.3279C15.9629 21.5738 21.4137 16.0656 28.0973 16.0656C34.781 16.0656 40.2318 21.5738 40.2318 28.3279C40.102 29.3115 39.9722 30.2951 39.7126 31.3443Z\" fill=\"#BDBDBD\" />\n                                <path d=\"M54.7022 27.0164H49.3163C48.6026 27.0164 48.0185 27.6066 48.0185 28.3279C48.0185 29.0492 48.6026 29.6394 49.3163 29.6394H54.7022C55.416 29.6394 56 29.0492 56 28.3279C56 27.6066 55.416 27.0164 54.7022 27.0164Z\" fill=\"#BDBDBD\" />\n                                <path d=\"M43.022 14.4263C43.3465 14.4263 43.6709 14.2951 43.9305 14.0328L47.759 10.164C48.2781 9.63937 48.2781 8.85249 47.759 8.3279C47.2399 7.80331 46.4612 7.80331 45.9421 8.3279L42.1136 12.1967C41.5944 12.7213 41.5944 13.5082 42.1136 14.0328C42.3731 14.2951 42.6976 14.4263 43.022 14.4263Z\" fill=\"#BDBDBD\" />\n                                <path d=\"M27.9675 8.06557C28.6813 8.06557 29.2653 7.47541 29.2653 6.75409V1.31148C29.2653 0.590164 28.6813 0 27.9675 0C27.2538 0 26.6697 0.590164 26.6697 1.31148V6.75409C26.6697 7.47541 27.2538 8.06557 27.9675 8.06557Z\" fill=\"#BDBDBD\" />\n                                <path d=\"M12.0047 14.0328C12.2642 14.2951 12.5886 14.4263 12.9131 14.4263C13.2375 14.4263 13.562 14.2951 13.8216 14.0328C14.3407 13.5082 14.3407 12.7213 13.8216 12.1967L9.99304 8.3279C9.47392 7.80331 8.69525 7.80331 8.17613 8.3279C7.65701 8.85249 7.65701 9.63937 8.17613 10.164L12.0047 14.0328Z\" fill=\"#BDBDBD\" />\n                                <path d=\"M6.68365 27.0164H1.2978C0.584009 27.0164 0 27.6066 0 28.3279C0 29.0492 0.584009 29.6394 1.2978 29.6394H6.68365C7.39744 29.6394 7.98145 29.0492 7.98145 28.3279C7.98145 27.6066 7.39744 27.0164 6.68365 27.0164Z\" fill=\"#BDBDBD\" />\n                                <path d=\"M12.0047 42.623L8.17613 46.4918C7.65701 47.0164 7.65701 47.8033 8.17613 48.3279C8.43569 48.5902 8.76016 48.7213 9.08461 48.7213C9.40906 48.7213 9.73348 48.5902 9.99304 48.3279L13.8216 44.4591C14.3407 43.9345 14.3407 43.1476 13.8216 42.623C13.3024 42.0984 12.4589 42.0984 12.0047 42.623Z\" fill=\"#BDBDBD\" />\n                                <path d=\"M43.9305 42.623C43.4113 42.0984 42.6327 42.0984 42.1136 42.623C41.5944 43.1476 41.5944 43.9345 42.1136 44.4591L45.9421 48.3279C46.2016 48.5902 46.5261 48.7213 46.8505 48.7213C47.175 48.7213 47.4994 48.5902 47.759 48.3279C48.2781 47.8033 48.2781 47.0164 47.759 46.4918L43.9305 42.623Z\" fill=\"#BDBDBD\" />\n                            </svg>\n                        </div>\n                        <p className=\"small-text\">Topic</p>\n                    </Link>\n                    </div>\n                    {/* archive tab */}\n                    <div>\n                    <Link to=\"/archive\">\n                        <div>\n                            <svg width=\"56\" height=\"54\" viewBox=\"0 0 56 54\" xmlns=\"http://www.w3.org/2000/svg\">\n                                <path d=\"M43.7891 53.4996C43.399 53.4996 43.007 53.4069 42.6486 53.2177L27.9997 45.5165L13.3508 53.2177C12.9924 53.4069 12.6004 53.4996 12.2103 53.4996C11.7019 53.4996 11.1967 53.3415 10.7692 53.0317C10.0145 52.4829 9.63615 51.5533 9.7942 50.6343L12.5917 34.3222L0.740297 22.7695C0.072034 22.118 -0.168142 21.1442 0.119945 20.2563C0.408654 19.369 1.17585 18.7226 2.09922 18.5882L18.4773 16.2082L25.8014 1.36639C26.2145 0.529508 27.0664 0 27.9997 0C28.933 0 29.7848 0.529508 30.198 1.36639L37.5227 16.2082L53.9008 18.5882C54.8242 18.7219 55.5913 19.3684 55.8801 20.2563C56.1681 21.1436 55.928 22.118 55.2597 22.7695L43.4083 34.3216L46.2058 50.6336C46.3638 51.5527 45.9855 52.4823 45.2308 53.0311C44.8033 53.3415 44.2975 53.4996 43.7891 53.4996ZM43.6329 50.8334L40.8759 34.7559C40.7328 33.9227 41.0097 33.0722 41.6151 32.4823L53.2947 21.0969L37.1531 18.7506C36.3163 18.6292 35.5932 18.1041 35.2187 17.3456L27.9997 2.71661L20.7807 17.345C20.4061 18.1034 19.6831 18.6292 18.8462 18.7499L2.70464 21.0969L14.3843 32.4823C14.9897 33.0728 15.266 33.9233 15.1235 34.7559L12.3664 50.8334L26.8044 43.2429C27.1784 43.0457 27.589 42.9474 27.9997 42.9474C28.4104 42.9474 28.821 43.0457 29.195 43.2429L43.6329 50.8334Z\" fill=\"#BDBDBD\" />\n                            </svg>\n                        </div>\n                        <p className=\"small-text\">My Archive</p>\n                    </Link>\n                    </div>\n             \n\n\n                </div>\n\n                {/* account menu */}\n                <div className={isAccountMenuShown ? \"account-menu\":\"hidden\"}>\n                    <Link to=\"/my-posts\">My Posts</Link>\n                    <Link to=\"/archive\">My Archives</Link>\n                    <Link to=\"#\">Setting</Link>\n                    <button type=\"button\">Log Out</button>\n                </div>\n\n\n\n            </div>\n\n\n\n        </nav>\n    )\n}\n","import React, { useState } from 'react'\nimport './StickyBtn.scss'\nimport { Link } from 'react-router-dom'\n\nexport default function StickyBtn() {\n    const [expandSearchBar, setExpandSearchBar] = useState(false)\n\n    function showSearchBar() {\n        expandSearchBar ? setExpandSearchBar(false) : setExpandSearchBar(true)\n    }\n    return (\n        <div className={expandSearchBar ? \"sticky-btn show-search-bar\" : \"sticky-btn\"} >\n            {/* back to top, large screen only */}\n            <div onClick={()=>{\n                window.scrollTo(0,0)\n            }}>\n                <svg width=\"30\" height=\"30\" viewBox=\"0 0 16 16\" className=\"bi bi-chevron-bar-up\" fill=\"#FFFFFF\" xmlns=\"http://www.w3.org/2000/svg\">\n                    <path fillRule=\"evenodd\" d=\"M3.646 11.854a.5.5 0 0 0 .708 0L8 8.207l3.646 3.647a.5.5 0 0 0 .708-.708l-4-4a.5.5 0 0 0-.708 0l-4 4a.5.5 0 0 0 0 .708zM2.4 5.2c0 .22.18.4.4.4h10.4a.4.4 0 0 0 0-.8H2.8a.4.4 0 0 0-.4.4z\" />\n                </svg>\n            </div>\n\n            {/* add new post, mobile only */}\n            <div>\n                <Link to=\"/new-post\">\n                    <svg width=\"40\" height=\"28\" viewBox=\"0 0 40 28\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path d=\"M33.8625 0.462524C33.651 0.46422 33.4488 0.5496 33.3 0.7L13.5 20.5C13.39 20.6135 13.3161 20.7571 13.2876 20.9125L12.15 26.5626C12.1228 26.6919 12.128 26.826 12.1652 26.9529C12.2025 27.0798 12.2706 27.1954 12.3635 27.2895C12.4563 27.3836 12.5711 27.4533 12.6974 27.4922C12.8238 27.5311 12.9578 27.5381 13.0876 27.5126L18.75 26.375C18.9055 26.3465 19.049 26.2726 19.1625 26.1626L38.9625 6.36252C39.0377 6.28812 39.0974 6.19956 39.1382 6.10193C39.1789 6.0043 39.1999 5.89956 39.1999 5.79377C39.1999 5.68799 39.1789 5.58325 39.1382 5.48562C39.0974 5.38799 39.0377 5.2994 38.9625 5.225L34.4376 0.7C34.3241 0.589963 34.1805 0.516032 34.025 0.4875C33.9719 0.473675 33.9174 0.465359 33.8625 0.462695V0.462524ZM33.8749 2.4L37.2624 5.7875L18.1999 24.8375L13.9624 25.7L14.7999 21.475L33.8749 2.4V2.4ZM2.00005 25.1375C1.33733 25.1375 0.800049 25.6748 0.800049 26.3375C0.800049 27.0002 1.33733 27.5375 2.00005 27.5375H9.20005C9.86277 27.5375 10.4 27.0002 10.4 26.3375C10.4 25.6748 9.86277 25.1375 9.20005 25.1375H2.00005V25.1375Z\" fill=\"#FFFFF8\" />\n                    </svg>\n                </Link>\n            </div>\n\n\n\n            {/* search, mobile only */}\n            <div >\n                <div onClick={showSearchBar}>\n                    <svg width=\"27\" height=\"27\" viewBox=\"0 0 16 16\" className=\"bi bi-search\" fill=\"currentColor\" xmlns=\"http://www.w3.org/2000/svg\">\n                        <path fillRule=\"evenodd\" d=\"M10.442 10.442a1 1 0 0 1 1.415 0l3.85 3.85a1 1 0 0 1-1.414 1.415l-3.85-3.85a1 1 0 0 1 0-1.415z\" />\n                        <path fillRule=\"evenodd\" d=\"M6.5 12a5.5 5.5 0 1 0 0-11 5.5 5.5 0 0 0 0 11zM13 6.5a6.5 6.5 0 1 1-13 0 6.5 6.5 0 0 1 13 0z\" />\n                    </svg>\n                </div>\n                <form>\n                    <input type=\"text\" placeholder=\"mock search bar\"></input>\n                </form>\n\n            </div>\n\n\n        </div>\n    )\n}\n","import React,{useState,useEffect} from 'react'\nimport { Link } from 'react-router-dom'\nimport './DevNote.scss'\n\nexport default function DevNote() {\n    const [isSeen, setIsSeen] = useState(false)\n\n    useEffect(() => {\n        setIsSeen(localStorage.getItem('seen')||\n       false)\n        }, [])\n    \n      useEffect(() => {\n        localStorage.setItem(\"seen\", isSeen)\n      }, [isSeen])\n\n    return (\n        <div className={isSeen?\"hidden\":\"dev-note\"}>\n            <h2>A message from the developer</h2>\n            <p>Hello and welcome! This is a mockup webapp for a student project. This mockup is only for personal use and will NOT be included in any types of commercial projects in the future. </p>\n            <p>Artwork photos used in this mockup are fetched from the <Link to=\"https://unsplash.com/developers\"> Unsplash API</Link>. Note that most of the details that associated with an artwork are collected from the Internet. If details couldn't be founded , a random designer name and topic will be assigned. </p>\n            <p>If you have any suggestions for this website, feel free to contact hannahwu0707@gmail.com</p>\n            <button className=\"btn btn-primary\" type=\"button\" onClick={()=>{\n                setIsSeen(true)\n            }}>Yes, I understand this is a mockup</button>\n        </div>\n    )\n}\n","import React,{useState,useEffect} from 'react';\nimport './App.scss';\nimport './components/Sidebar';\nimport Sidebar from './components/Sidebar';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter,Route} from 'react-router-dom'\nimport ResetScroll from './components/ResetScroll';\nimport Home from './pages/Home';\nimport Article from './pages/Article';\nimport All from './pages/All';\nimport NewPost from './pages/NewPost';\nimport MyArchive from './pages/MyArchive';\nimport Collection from './pages/Collection';\nimport MyPosts from './pages/MyPosts';\nimport MobileNav from './components/MobileNav';\nimport StickyBtn from './components/StickyBtn';\nimport DevNote from './components/DevNote';\n\n\nfunction App(){\n  \n  const[data,setData] = useState(null);\n  const [tab, setTab] = useState(\"featured\");\n\n  // fetch collection data\n  useEffect(() => {\n    const fetchData = async () => {\n      const request = await fetch(\n        '/api/collection',\n      );\n\n      try {\n        const result = await request.json();\n        setData(result)\n        return result;\n      } catch (error) {\n        console.log(error)\n      }\n\n    }\n\n    fetchData();\n  }, []);\n\n\n // get active tab from sidebar\n  const getTabName = (tabName) => {\n    setTab(tabName)\n  }\n\n  // maintain active tab state after page reload\n  useEffect(() => {\n    setTab(localStorage.getItem('tabName')||\n    \"featured\")\n    }, [])\n\n  useEffect(() => {\n    localStorage.setItem(\"tabName\", tab)\n  }, [tab])\n\n\n  return (\n    <div className=\"App\">\n     \n      <BrowserRouter>\n        <DevNote />\n        <MobileNav getTabName={getTabName} />\n        <Sidebar getTabName={getTabName} activeTab={tab}/>\n        <Navbar />\n        <StickyBtn />\n        <ResetScroll />\n       \n        <Route exact path=\"/\" render={()=>(data && <Home data={data[tab]} tab={tab} />)}/> \n        <Route path=\"/article/:id\" component={Article}/> \n        <Route path=\"/all/:type\" render={(props)=>(data && <All data={data[tab]} browserProps={props}/>)}/>\n        <Route path=\"/new-post\" render={()=>(<NewPost getTabName={getTabName} />)}/>\n        <Route path=\"/archive\" component={MyArchive}/>\n        <Route path=\"/collection/:name\" render={(props)=>(data && <Collection data={data[tab]} browserProps={props}/>)}/> \n        <Route path=\"/my-posts\" component={MyPosts}/>\n      \n\n      </BrowserRouter>\n\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.css'\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}